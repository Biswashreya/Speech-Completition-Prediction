{
  "title": "Lec 16: Graph Searching; BFS and DFS",
  "source": "NPTEL",
  "course": "Discrete Mathematics by Prof Benny George and  Prof. Sajith Gopalan",
  "transcript": [
    {
      "start": "0:09",
      "end": "0:09",
      "text": "[Music]"
    },
    {
      "start": "0:09",
      "end": "0:12",
      "text": "[Music] you"
    },
    {
      "start": "0:21",
      "end": "0:21",
      "text": "[Music]"
    },
    {
      "start": "0:21",
      "end": "0:29",
      "text": "[Music] you"
    },
    {
      "start": "0:31",
      "end": "0:31",
      "text": "in this lecture we will learn about"
    },
    {
      "start": "0:31",
      "end": "0:34",
      "text": "in this lecture we will learn about graph searching so graphs for us is a"
    },
    {
      "start": "0:34",
      "end": "0:34",
      "text": "graph searching so graphs for us is a"
    },
    {
      "start": "0:34",
      "end": "0:39",
      "text": "graph searching so graphs for us is a collection of vertices and edges and we"
    },
    {
      "start": "0:39",
      "end": "0:39",
      "text": "collection of vertices and edges and we"
    },
    {
      "start": "0:39",
      "end": "0:41",
      "text": "collection of vertices and edges and we need to explore the vertices in a"
    },
    {
      "start": "0:41",
      "end": "0:41",
      "text": "need to explore the vertices in a"
    },
    {
      "start": "0:41",
      "end": "0:44",
      "text": "need to explore the vertices in a certain order let's take a simple"
    },
    {
      "start": "0:44",
      "end": "0:44",
      "text": "certain order let's take a simple"
    },
    {
      "start": "0:44",
      "end": "0:48",
      "text": "certain order let's take a simple example if you think of any social"
    },
    {
      "start": "0:48",
      "end": "0:48",
      "text": "example if you think of any social"
    },
    {
      "start": "0:48",
      "end": "0:52",
      "text": "example if you think of any social networking site you can look at your"
    },
    {
      "start": "0:52",
      "end": "0:52",
      "text": "networking site you can look at your"
    },
    {
      "start": "0:52",
      "end": "0:55",
      "text": "networking site you can look at your individual page as a certain node and"
    },
    {
      "start": "0:55",
      "end": "0:55",
      "text": "individual page as a certain node and"
    },
    {
      "start": "0:55",
      "end": "0:58",
      "text": "individual page as a certain node and you want to know all your connections so"
    },
    {
      "start": "0:58",
      "end": "0:58",
      "text": "you want to know all your connections so"
    },
    {
      "start": "0:58",
      "end": "0:59",
      "text": "you want to know all your connections so you won't know who your friends are"
    },
    {
      "start": "0:59",
      "end": "0:59",
      "text": "you won't know who your friends are"
    },
    {
      "start": "0:59",
      "end": "1:02",
      "text": "you won't know who your friends are their friends and so on so you can think"
    },
    {
      "start": "1:02",
      "end": "1:02",
      "text": "their friends and so on so you can think"
    },
    {
      "start": "1:02",
      "end": "1:05",
      "text": "their friends and so on so you can think of this as a huge graph in which each"
    },
    {
      "start": "1:05",
      "end": "1:05",
      "text": "of this as a huge graph in which each"
    },
    {
      "start": "1:05",
      "end": "1:10",
      "text": "of this as a huge graph in which each person as a node ok and there's an edge"
    },
    {
      "start": "1:10",
      "end": "1:10",
      "text": "person as a node ok and there's an edge"
    },
    {
      "start": "1:10",
      "end": "1:15",
      "text": "person as a node ok and there's an edge between two people if they are friends"
    },
    {
      "start": "1:15",
      "end": "1:15",
      "text": "between two people if they are friends"
    },
    {
      "start": "1:15",
      "end": "1:18",
      "text": "between two people if they are friends ok so you've given some such graph so"
    },
    {
      "start": "1:18",
      "end": "1:18",
      "text": "ok so you've given some such graph so"
    },
    {
      "start": "1:18",
      "end": "1:22",
      "text": "ok so you've given some such graph so here there's an example of 4 people 1 2"
    },
    {
      "start": "1:22",
      "end": "1:22",
      "text": "here there's an example of 4 people 1 2"
    },
    {
      "start": "1:22",
      "end": "1:30",
      "text": "here there's an example of 4 people 1 2 3 &amp; 4 and here 2 &amp; 4 are friends with"
    },
    {
      "start": "1:30",
      "end": "1:30",
      "text": "3 &amp; 4 and here 2 &amp; 4 are friends with"
    },
    {
      "start": "1:30",
      "end": "1:32",
      "text": "3 &amp; 4 and here 2 &amp; 4 are friends with each other and their friends at one as"
    },
    {
      "start": "1:32",
      "end": "1:32",
      "text": "each other and their friends at one as"
    },
    {
      "start": "1:32",
      "end": "1:35",
      "text": "each other and their friends at one as well ok so you've given some arbitrary"
    },
    {
      "start": "1:35",
      "end": "1:35",
      "text": "well ok so you've given some arbitrary"
    },
    {
      "start": "1:35",
      "end": "1:39",
      "text": "well ok so you've given some arbitrary graph how do you look at all the"
    },
    {
      "start": "1:39",
      "end": "1:39",
      "text": "graph how do you look at all the"
    },
    {
      "start": "1:39",
      "end": "1:41",
      "text": "graph how do you look at all the vertices list all the vertices in a"
    },
    {
      "start": "1:41",
      "end": "1:41",
      "text": "vertices list all the vertices in a"
    },
    {
      "start": "1:41",
      "end": "1:44",
      "text": "vertices list all the vertices in a certain order restricted to let us say I"
    },
    {
      "start": "1:44",
      "end": "1:44",
      "text": "certain order restricted to let us say I"
    },
    {
      "start": "1:44",
      "end": "1:46",
      "text": "certain order restricted to let us say I mean if you think about the case of"
    },
    {
      "start": "1:46",
      "end": "1:46",
      "text": "mean if you think about the case of"
    },
    {
      "start": "1:46",
      "end": "1:48",
      "text": "mean if you think about the case of social networking sites you want to"
    },
    {
      "start": "1:48",
      "end": "1:48",
      "text": "social networking sites you want to"
    },
    {
      "start": "1:48",
      "end": "1:52",
      "text": "social networking sites you want to order all your connections in some order"
    },
    {
      "start": "1:52",
      "end": "1:52",
      "text": "order all your connections in some order"
    },
    {
      "start": "1:52",
      "end": "1:56",
      "text": "order all your connections in some order you can either look at I mean you can"
    },
    {
      "start": "1:56",
      "end": "1:56",
      "text": "you can either look at I mean you can"
    },
    {
      "start": "1:56",
      "end": "1:58",
      "text": "you can either look at I mean you can look at your friends list them out and"
    },
    {
      "start": "1:58",
      "end": "1:58",
      "text": "look at your friends list them out and"
    },
    {
      "start": "1:58",
      "end": "2:01",
      "text": "look at your friends list them out and then friends of friends and then friends"
    },
    {
      "start": "2:01",
      "end": "2:01",
      "text": "then friends of friends and then friends"
    },
    {
      "start": "2:01",
      "end": "2:04",
      "text": "then friends of friends and then friends or friends or friends and so on and that"
    },
    {
      "start": "2:04",
      "end": "2:04",
      "text": "or friends or friends and so on and that"
    },
    {
      "start": "2:04",
      "end": "2:06",
      "text": "or friends or friends and so on and that would essentially be what we will refer"
    },
    {
      "start": "2:06",
      "end": "2:06",
      "text": "would essentially be what we will refer"
    },
    {
      "start": "2:06",
      "end": "2:10",
      "text": "would essentially be what we will refer to as breadth-first search you can also"
    },
    {
      "start": "2:10",
      "end": "2:10",
      "text": "to as breadth-first search you can also"
    },
    {
      "start": "2:10",
      "end": "2:13",
      "text": "to as breadth-first search you can also look at North tonight approach you find"
    },
    {
      "start": "2:13",
      "end": "2:13",
      "text": "look at North tonight approach you find"
    },
    {
      "start": "2:13",
      "end": "2:15",
      "text": "look at North tonight approach you find one of your friends look at another"
    },
    {
      "start": "2:15",
      "end": "2:15",
      "text": "one of your friends look at another"
    },
    {
      "start": "2:15",
      "end": "2:18",
      "text": "one of your friends look at another friend of hers and keep on doing that"
    },
    {
      "start": "2:18",
      "end": "2:18",
      "text": "friend of hers and keep on doing that"
    },
    {
      "start": "2:18",
      "end": "2:20",
      "text": "friend of hers and keep on doing that sequence of friends then you will get"
    },
    {
      "start": "2:20",
      "end": "2:20",
      "text": "sequence of friends then you will get"
    },
    {
      "start": "2:20",
      "end": "2:23",
      "text": "sequence of friends then you will get what is called as DFS okay the commonly"
    },
    {
      "start": "2:23",
      "end": "2:23",
      "text": "what is called as DFS okay the commonly"
    },
    {
      "start": "2:23",
      "end": "2:26",
      "text": "what is called as DFS okay the commonly used searching techniques there we'll"
    },
    {
      "start": "2:26",
      "end": "2:26",
      "text": "used searching techniques there we'll"
    },
    {
      "start": "2:26",
      "end": "2:28",
      "text": "used searching techniques there we'll just write them down breadth-first"
    },
    {
      "start": "2:28",
      "end": "2:28",
      "text": "just write them down breadth-first"
    },
    {
      "start": "2:28",
      "end": "2:38",
      "text": "just write them down breadth-first search and depth-first search"
    },
    {
      "start": "2:41",
      "end": "2:41",
      "text": "so here if you stand your search at"
    },
    {
      "start": "2:41",
      "end": "2:46",
      "text": "so here if you stand your search at vertex one we may view vertices a two"
    },
    {
      "start": "2:46",
      "end": "2:46",
      "text": "vertex one we may view vertices a two"
    },
    {
      "start": "2:46",
      "end": "2:50",
      "text": "vertex one we may view vertices a two and four are the vertices at depth 1 and"
    },
    {
      "start": "2:50",
      "end": "2:50",
      "text": "and four are the vertices at depth 1 and"
    },
    {
      "start": "2:50",
      "end": "2:54",
      "text": "and four are the vertices at depth 1 and the vertex 3 is at depth 2 so if you"
    },
    {
      "start": "2:54",
      "end": "2:54",
      "text": "the vertex 3 is at depth 2 so if you"
    },
    {
      "start": "2:54",
      "end": "2:58",
      "text": "the vertex 3 is at depth 2 so if you look at the order 1 followed by 2 4"
    },
    {
      "start": "2:58",
      "end": "2:58",
      "text": "look at the order 1 followed by 2 4"
    },
    {
      "start": "2:58",
      "end": "3:02",
      "text": "look at the order 1 followed by 2 4 forward by 3 that would be the"
    },
    {
      "start": "3:02",
      "end": "3:02",
      "text": "forward by 3 that would be the"
    },
    {
      "start": "3:02",
      "end": "3:06",
      "text": "forward by 3 that would be the breadth-first search you have listed"
    },
    {
      "start": "3:06",
      "end": "3:06",
      "text": "breadth-first search you have listed"
    },
    {
      "start": "3:06",
      "end": "3:09",
      "text": "breadth-first search you have listed them in the order of their depth that is"
    },
    {
      "start": "3:09",
      "end": "3:09",
      "text": "them in the order of their depth that is"
    },
    {
      "start": "3:09",
      "end": "3:11",
      "text": "them in the order of their depth that is called as a breadth-first search whereas"
    },
    {
      "start": "3:11",
      "end": "3:11",
      "text": "called as a breadth-first search whereas"
    },
    {
      "start": "3:11",
      "end": "3:19",
      "text": "called as a breadth-first search whereas if you list it as 1 2 3 4 so you've gone"
    },
    {
      "start": "3:19",
      "end": "3:19",
      "text": "if you list it as 1 2 3 4 so you've gone"
    },
    {
      "start": "3:19",
      "end": "3:21",
      "text": "if you list it as 1 2 3 4 so you've gone from 1 to 2 from 2 you could go to 4"
    },
    {
      "start": "3:21",
      "end": "3:21",
      "text": "from 1 to 2 from 2 you could go to 4"
    },
    {
      "start": "3:21",
      "end": "3:27",
      "text": "from 1 to 2 from 2 you could go to 4 from 4 you could go to 3 okay but there"
    },
    {
      "start": "3:27",
      "end": "3:27",
      "text": "from 4 you could go to 3 okay but there"
    },
    {
      "start": "3:27",
      "end": "3:30",
      "text": "from 4 you could go to 3 okay but there are examples where these two searches"
    },
    {
      "start": "3:30",
      "end": "3:30",
      "text": "are examples where these two searches"
    },
    {
      "start": "3:30",
      "end": "3:36",
      "text": "are examples where these two searches return different orderings ok so let's"
    },
    {
      "start": "3:36",
      "end": "3:36",
      "text": "return different orderings ok so let's"
    },
    {
      "start": "3:36",
      "end": "3:41",
      "text": "return different orderings ok so let's look at this more formally let's just"
    },
    {
      "start": "3:41",
      "end": "3:41",
      "text": "look at this more formally let's just"
    },
    {
      "start": "3:41",
      "end": "3:42",
      "text": "look at this more formally let's just look at it look at a little more"
    },
    {
      "start": "3:42",
      "end": "3:42",
      "text": "look at it look at a little more"
    },
    {
      "start": "3:42",
      "end": "3:50",
      "text": "look at it look at a little more complicated example so we have the"
    },
    {
      "start": "3:50",
      "end": "3:50",
      "text": "complicated example so we have the"
    },
    {
      "start": "3:50",
      "end": "4:05",
      "text": "complicated example so we have the following graph"
    },
    {
      "start": "4:09",
      "end": "4:09",
      "text": "suppose we have this graph what will be"
    },
    {
      "start": "4:09",
      "end": "4:11",
      "text": "suppose we have this graph what will be what will the BFS ordering be and what"
    },
    {
      "start": "4:11",
      "end": "4:11",
      "text": "what will the BFS ordering be and what"
    },
    {
      "start": "4:11",
      "end": "4:13",
      "text": "what will the BFS ordering be and what will the depth-first search"
    },
    {
      "start": "4:13",
      "end": "4:13",
      "text": "will the depth-first search"
    },
    {
      "start": "4:13",
      "end": "4:16",
      "text": "will the depth-first search ordering we will first write down the"
    },
    {
      "start": "4:16",
      "end": "4:16",
      "text": "ordering we will first write down the"
    },
    {
      "start": "4:16",
      "end": "4:22",
      "text": "ordering we will first write down the BFS ordering starting at vertex 1 so the"
    },
    {
      "start": "4:22",
      "end": "4:22",
      "text": "BFS ordering starting at vertex 1 so the"
    },
    {
      "start": "4:22",
      "end": "4:26",
      "text": "BFS ordering starting at vertex 1 so the start vertex let us color reduce in red"
    },
    {
      "start": "4:26",
      "end": "4:26",
      "text": "start vertex let us color reduce in red"
    },
    {
      "start": "4:26",
      "end": "4:28",
      "text": "start vertex let us color reduce in red this is just to indicate that it is a"
    },
    {
      "start": "4:28",
      "end": "4:28",
      "text": "this is just to indicate that it is a"
    },
    {
      "start": "4:28",
      "end": "4:31",
      "text": "this is just to indicate that it is a starting vertex so that will be the"
    },
    {
      "start": "4:31",
      "end": "4:31",
      "text": "starting vertex so that will be the"
    },
    {
      "start": "4:31",
      "end": "4:35",
      "text": "starting vertex so that will be the first vertex that is encountered in BFS"
    },
    {
      "start": "4:35",
      "end": "4:35",
      "text": "first vertex that is encountered in BFS"
    },
    {
      "start": "4:35",
      "end": "4:38",
      "text": "first vertex that is encountered in BFS or in DFS and now look at all the"
    },
    {
      "start": "4:38",
      "end": "4:38",
      "text": "or in DFS and now look at all the"
    },
    {
      "start": "4:38",
      "end": "4:41",
      "text": "or in DFS and now look at all the neighbors of one that precisely 2"
    },
    {
      "start": "4:41",
      "end": "4:41",
      "text": "neighbors of one that precisely 2"
    },
    {
      "start": "4:41",
      "end": "4:44",
      "text": "neighbors of one that precisely 2 neighbors 2 &amp; 3 lists them out you will"
    },
    {
      "start": "4:44",
      "end": "4:44",
      "text": "neighbors 2 &amp; 3 lists them out you will"
    },
    {
      "start": "4:44",
      "end": "4:50",
      "text": "neighbors 2 &amp; 3 lists them out you will get 2 &amp; 3 and the next stage would be to"
    },
    {
      "start": "4:50",
      "end": "4:50",
      "text": "get 2 &amp; 3 and the next stage would be to"
    },
    {
      "start": "4:50",
      "end": "4:52",
      "text": "get 2 &amp; 3 and the next stage would be to list out all the neighbors of 2 followed"
    },
    {
      "start": "4:52",
      "end": "4:52",
      "text": "list out all the neighbors of 2 followed"
    },
    {
      "start": "4:52",
      "end": "4:56",
      "text": "list out all the neighbors of 2 followed by all the neighbors of 3 to do that in"
    },
    {
      "start": "4:56",
      "end": "4:56",
      "text": "by all the neighbors of 3 to do that in"
    },
    {
      "start": "4:56",
      "end": "4:59",
      "text": "by all the neighbors of 3 to do that in this case the neighbors of 2 that is 3"
    },
    {
      "start": "4:59",
      "end": "4:59",
      "text": "this case the neighbors of 2 that is 3"
    },
    {
      "start": "4:59",
      "end": "5:01",
      "text": "this case the neighbors of 2 that is 3 so we will not list out the already"
    },
    {
      "start": "5:01",
      "end": "5:01",
      "text": "so we will not list out the already"
    },
    {
      "start": "5:01",
      "end": "5:03",
      "text": "so we will not list out the already listed neighbors so there are precisely"
    },
    {
      "start": "5:03",
      "end": "5:03",
      "text": "listed neighbors so there are precisely"
    },
    {
      "start": "5:03",
      "end": "5:12",
      "text": "listed neighbors so there are precisely 2 neighbors namely 4 &amp; 5 so 4 is a"
    },
    {
      "start": "5:12",
      "end": "5:12",
      "text": "2 neighbors namely 4 &amp; 5 so 4 is a"
    },
    {
      "start": "5:12",
      "end": "5:17",
      "text": "2 neighbors namely 4 &amp; 5 so 4 is a neighbor of 2 as well as 3 5 is a"
    },
    {
      "start": "5:17",
      "end": "5:17",
      "text": "neighbor of 2 as well as 3 5 is a"
    },
    {
      "start": "5:17",
      "end": "5:23",
      "text": "neighbor of 2 as well as 3 5 is a neighbor only of 3 and not of 2 and then"
    },
    {
      "start": "5:23",
      "end": "5:23",
      "text": "neighbor only of 3 and not of 2 and then"
    },
    {
      "start": "5:23",
      "end": "5:25",
      "text": "neighbor only of 3 and not of 2 and then we will list out neighbors of 4 &amp; 5 they"
    },
    {
      "start": "5:25",
      "end": "5:25",
      "text": "we will list out neighbors of 4 &amp; 5 they"
    },
    {
      "start": "5:25",
      "end": "5:31",
      "text": "we will list out neighbors of 4 &amp; 5 they will get 6 7 and then we have the"
    },
    {
      "start": "5:31",
      "end": "5:31",
      "text": "will get 6 7 and then we have the"
    },
    {
      "start": "5:31",
      "end": "5:36",
      "text": "will get 6 7 and then we have the neighbor 8 okay so this would be the DFS"
    },
    {
      "start": "5:36",
      "end": "5:36",
      "text": "neighbor 8 okay so this would be the DFS"
    },
    {
      "start": "5:36",
      "end": "5:40",
      "text": "neighbor 8 okay so this would be the DFS ordering that s if you take the DFS"
    },
    {
      "start": "5:40",
      "end": "5:40",
      "text": "ordering that s if you take the DFS"
    },
    {
      "start": "5:40",
      "end": "5:45",
      "text": "ordering that s if you take the DFS outdrink so let's say so in BFS art"
    },
    {
      "start": "5:45",
      "end": "5:45",
      "text": "outdrink so let's say so in BFS art"
    },
    {
      "start": "5:45",
      "end": "5:47",
      "text": "outdrink so let's say so in BFS art drink it's not a mean it's not fully"
    },
    {
      "start": "5:47",
      "end": "5:47",
      "text": "drink it's not a mean it's not fully"
    },
    {
      "start": "5:47",
      "end": "5:51",
      "text": "drink it's not a mean it's not fully determined in the sense the did be"
    },
    {
      "start": "5:51",
      "end": "5:51",
      "text": "determined in the sense the did be"
    },
    {
      "start": "5:51",
      "end": "5:53",
      "text": "determined in the sense the did be vertex visit vertex 2 before 3 or"
    },
    {
      "start": "5:53",
      "end": "5:53",
      "text": "vertex visit vertex 2 before 3 or"
    },
    {
      "start": "5:53",
      "end": "5:57",
      "text": "vertex visit vertex 2 before 3 or louisville visit 3 before 2 that is not"
    },
    {
      "start": "5:57",
      "end": "5:57",
      "text": "louisville visit 3 before 2 that is not"
    },
    {
      "start": "5:57",
      "end": "5:59",
      "text": "louisville visit 3 before 2 that is not really specified you could visit in any"
    },
    {
      "start": "5:59",
      "end": "5:59",
      "text": "really specified you could visit in any"
    },
    {
      "start": "5:59",
      "end": "6:02",
      "text": "really specified you could visit in any order and that has a chain of other"
    },
    {
      "start": "6:02",
      "end": "6:02",
      "text": "order and that has a chain of other"
    },
    {
      "start": "6:02",
      "end": "6:06",
      "text": "order and that has a chain of other choices that may not be fully determined"
    },
    {
      "start": "6:06",
      "end": "6:06",
      "text": "choices that may not be fully determined"
    },
    {
      "start": "6:06",
      "end": "6:10",
      "text": "choices that may not be fully determined okay the same applies in DFS which"
    },
    {
      "start": "6:10",
      "end": "6:10",
      "text": "okay the same applies in DFS which"
    },
    {
      "start": "6:10",
      "end": "6:11",
      "text": "okay the same applies in DFS which neighbor you pick"
    },
    {
      "start": "6:11",
      "end": "6:11",
      "text": "neighbor you pick"
    },
    {
      "start": "6:11",
      "end": "6:14",
      "text": "neighbor you pick there is no restrictions in either BFS"
    },
    {
      "start": "6:14",
      "end": "6:14",
      "text": "there is no restrictions in either BFS"
    },
    {
      "start": "6:14",
      "end": "6:17",
      "text": "there is no restrictions in either BFS or DFS but whether"
    },
    {
      "start": "6:17",
      "end": "6:17",
      "text": "or DFS but whether"
    },
    {
      "start": "6:17",
      "end": "6:20",
      "text": "or DFS but whether you look at all neighbors of a node and"
    },
    {
      "start": "6:20",
      "end": "6:20",
      "text": "you look at all neighbors of a node and"
    },
    {
      "start": "6:20",
      "end": "6:23",
      "text": "you look at all neighbors of a node and then go to the next level or whether you"
    },
    {
      "start": "6:23",
      "end": "6:23",
      "text": "then go to the next level or whether you"
    },
    {
      "start": "6:23",
      "end": "6:28",
      "text": "then go to the next level or whether you keep on traversing the graph layer by"
    },
    {
      "start": "6:28",
      "end": "6:28",
      "text": "keep on traversing the graph layer by"
    },
    {
      "start": "6:28",
      "end": "6:31",
      "text": "keep on traversing the graph layer by layer from one vertex to its neighbor"
    },
    {
      "start": "6:31",
      "end": "6:31",
      "text": "layer from one vertex to its neighbor"
    },
    {
      "start": "6:31",
      "end": "6:33",
      "text": "layer from one vertex to its neighbor and then to its neighbor and so on so"
    },
    {
      "start": "6:33",
      "end": "6:33",
      "text": "and then to its neighbor and so on so"
    },
    {
      "start": "6:33",
      "end": "6:37",
      "text": "and then to its neighbor and so on so that is what differentiates BFS and DFS"
    },
    {
      "start": "6:37",
      "end": "6:37",
      "text": "that is what differentiates BFS and DFS"
    },
    {
      "start": "6:37",
      "end": "6:40",
      "text": "that is what differentiates BFS and DFS okay so DFS our drink from so you could"
    },
    {
      "start": "6:40",
      "end": "6:40",
      "text": "okay so DFS our drink from so you could"
    },
    {
      "start": "6:40",
      "end": "6:44",
      "text": "okay so DFS our drink from so you could go from vertex one to vertex let's say"
    },
    {
      "start": "6:44",
      "end": "6:44",
      "text": "go from vertex one to vertex let's say"
    },
    {
      "start": "6:44",
      "end": "6:50",
      "text": "go from vertex one to vertex let's say three and from three you could go to"
    },
    {
      "start": "6:50",
      "end": "6:50",
      "text": "three and from three you could go to"
    },
    {
      "start": "6:50",
      "end": "6:54",
      "text": "three and from three you could go to four from four you could go either to"
    },
    {
      "start": "6:54",
      "end": "6:54",
      "text": "four from four you could go either to"
    },
    {
      "start": "6:54",
      "end": "6:58",
      "text": "four from four you could go either to five or six so the ones which we are"
    },
    {
      "start": "6:58",
      "end": "6:58",
      "text": "five or six so the ones which we are"
    },
    {
      "start": "6:58",
      "end": "7:00",
      "text": "five or six so the ones which we are visited will just draw in red so one two"
    },
    {
      "start": "7:00",
      "end": "7:00",
      "text": "visited will just draw in red so one two"
    },
    {
      "start": "7:00",
      "end": "7:03",
      "text": "visited will just draw in red so one two three we went from three to four we went"
    },
    {
      "start": "7:03",
      "end": "7:03",
      "text": "three we went from three to four we went"
    },
    {
      "start": "7:03",
      "end": "7:12",
      "text": "three we went from three to four we went and then four to six we could go and"
    },
    {
      "start": "7:12",
      "end": "7:12",
      "text": "and then four to six we could go and"
    },
    {
      "start": "7:12",
      "end": "7:17",
      "text": "and then four to six we could go and from six we could go to eight and from"
    },
    {
      "start": "7:17",
      "end": "7:17",
      "text": "from six we could go to eight and from"
    },
    {
      "start": "7:17",
      "end": "7:23",
      "text": "from six we could go to eight and from eight we could go to seven and from"
    },
    {
      "start": "7:23",
      "end": "7:23",
      "text": "eight we could go to seven and from"
    },
    {
      "start": "7:23",
      "end": "7:32",
      "text": "eight we could go to seven and from seven we could go to five"
    },
    {
      "start": "7:36",
      "end": "7:36",
      "text": "and after we have reached five we see"
    },
    {
      "start": "7:36",
      "end": "7:38",
      "text": "and after we have reached five we see that all its neighbors are essentially"
    },
    {
      "start": "7:38",
      "end": "7:38",
      "text": "that all its neighbors are essentially"
    },
    {
      "start": "7:38",
      "end": "7:47",
      "text": "that all its neighbors are essentially visited okay so the neighbors are five"
    },
    {
      "start": "7:47",
      "end": "7:47",
      "text": "visited okay so the neighbors are five"
    },
    {
      "start": "7:47",
      "end": "7:49",
      "text": "visited okay so the neighbors are five or three four and six all of them I"
    },
    {
      "start": "7:49",
      "end": "7:49",
      "text": "or three four and six all of them I"
    },
    {
      "start": "7:49",
      "end": "7:51",
      "text": "or three four and six all of them I visited so you go back to the node from"
    },
    {
      "start": "7:51",
      "end": "7:51",
      "text": "visited so you go back to the node from"
    },
    {
      "start": "7:51",
      "end": "7:53",
      "text": "visited so you go back to the node from where you came to five namely seven its"
    },
    {
      "start": "7:53",
      "end": "7:53",
      "text": "where you came to five namely seven its"
    },
    {
      "start": "7:53",
      "end": "7:56",
      "text": "where you came to five namely seven its neighbors are all being taken care of"
    },
    {
      "start": "7:56",
      "end": "7:56",
      "text": "neighbors are all being taken care of"
    },
    {
      "start": "7:56",
      "end": "7:58",
      "text": "neighbors are all being taken care of same with eight same with six same with"
    },
    {
      "start": "7:58",
      "end": "7:58",
      "text": "same with eight same with six same with"
    },
    {
      "start": "7:58",
      "end": "8:00",
      "text": "same with eight same with six same with four you backtrack all the way up to"
    },
    {
      "start": "8:00",
      "end": "8:00",
      "text": "four you backtrack all the way up to"
    },
    {
      "start": "8:00",
      "end": "8:03",
      "text": "four you backtrack all the way up to vertex four four has a neighbor which is"
    },
    {
      "start": "8:03",
      "end": "8:03",
      "text": "vertex four four has a neighbor which is"
    },
    {
      "start": "8:03",
      "end": "8:05",
      "text": "vertex four four has a neighbor which is not yet visited so that is node number"
    },
    {
      "start": "8:05",
      "end": "8:05",
      "text": "not yet visited so that is node number"
    },
    {
      "start": "8:05",
      "end": "8:08",
      "text": "not yet visited so that is node number two so that will be the last node that"
    },
    {
      "start": "8:08",
      "end": "8:08",
      "text": "two so that will be the last node that"
    },
    {
      "start": "8:08",
      "end": "8:13",
      "text": "two so that will be the last node that is visited okay so this will be the DFS"
    },
    {
      "start": "8:13",
      "end": "8:13",
      "text": "is visited okay so this will be the DFS"
    },
    {
      "start": "8:13",
      "end": "8:17",
      "text": "is visited okay so this will be the DFS ordering now we will see how we can"
    },
    {
      "start": "8:17",
      "end": "8:17",
      "text": "ordering now we will see how we can"
    },
    {
      "start": "8:17",
      "end": "8:20",
      "text": "ordering now we will see how we can algorithm Italy implement this we'll see"
    },
    {
      "start": "8:20",
      "end": "8:20",
      "text": "algorithm Italy implement this we'll see"
    },
    {
      "start": "8:20",
      "end": "8:22",
      "text": "algorithm Italy implement this we'll see an algorithm for we are doing these"
    },
    {
      "start": "8:22",
      "end": "8:22",
      "text": "an algorithm for we are doing these"
    },
    {
      "start": "8:22",
      "end": "8:29",
      "text": "an algorithm for we are doing these searches what we will do is the"
    },
    {
      "start": "8:29",
      "end": "8:29",
      "text": "searches what we will do is the"
    },
    {
      "start": "8:29",
      "end": "8:36",
      "text": "searches what we will do is the following"
    },
    {
      "start": "8:38",
      "end": "8:38",
      "text": "we will have colors associated with"
    },
    {
      "start": "8:38",
      "end": "8:40",
      "text": "we will have colors associated with every vortex these colors is to indicate"
    },
    {
      "start": "8:40",
      "end": "8:40",
      "text": "every vortex these colors is to indicate"
    },
    {
      "start": "8:40",
      "end": "8:43",
      "text": "every vortex these colors is to indicate whether certain vertex has been visited"
    },
    {
      "start": "8:43",
      "end": "8:43",
      "text": "whether certain vertex has been visited"
    },
    {
      "start": "8:43",
      "end": "8:46",
      "text": "whether certain vertex has been visited whether all its neighbors have been"
    },
    {
      "start": "8:46",
      "end": "8:46",
      "text": "whether all its neighbors have been"
    },
    {
      "start": "8:46",
      "end": "8:48",
      "text": "whether all its neighbors have been explored and so on so we will have three"
    },
    {
      "start": "8:48",
      "end": "8:48",
      "text": "explored and so on so we will have three"
    },
    {
      "start": "8:48",
      "end": "8:55",
      "text": "explored and so on so we will have three colors so colors will be one attribute"
    },
    {
      "start": "8:55",
      "end": "8:55",
      "text": "colors so colors will be one attribute"
    },
    {
      "start": "8:55",
      "end": "8:58",
      "text": "colors so colors will be one attribute another attribute would be its"
    },
    {
      "start": "8:58",
      "end": "8:58",
      "text": "another attribute would be its"
    },
    {
      "start": "8:58",
      "end": "9:00",
      "text": "another attribute would be its predecessor the each vertex will have a"
    },
    {
      "start": "9:00",
      "end": "9:00",
      "text": "predecessor the each vertex will have a"
    },
    {
      "start": "9:00",
      "end": "9:04",
      "text": "predecessor the each vertex will have a predecessor so this will indicate the"
    },
    {
      "start": "9:04",
      "end": "9:04",
      "text": "predecessor so this will indicate the"
    },
    {
      "start": "9:04",
      "end": "9:08",
      "text": "predecessor so this will indicate the vertex from which we explored the given"
    },
    {
      "start": "9:08",
      "end": "9:08",
      "text": "vertex from which we explored the given"
    },
    {
      "start": "9:08",
      "end": "9:13",
      "text": "vertex from which we explored the given vertex so if you have a vertex u so u"
    },
    {
      "start": "9:13",
      "end": "9:13",
      "text": "vertex so if you have a vertex u so u"
    },
    {
      "start": "9:13",
      "end": "9:17",
      "text": "vertex so if you have a vertex u so u dot color will initially be white for"
    },
    {
      "start": "9:17",
      "end": "9:17",
      "text": "dot color will initially be white for"
    },
    {
      "start": "9:17",
      "end": "9:19",
      "text": "dot color will initially be white for every vertex so this is the start state"
    },
    {
      "start": "9:19",
      "end": "9:19",
      "text": "every vertex so this is the start state"
    },
    {
      "start": "9:19",
      "end": "9:22",
      "text": "every vertex so this is the start state if every vertex will be initially white"
    },
    {
      "start": "9:22",
      "end": "9:22",
      "text": "if every vertex will be initially white"
    },
    {
      "start": "9:22",
      "end": "9:31",
      "text": "if every vertex will be initially white the other colors are gray and black gray"
    },
    {
      "start": "9:31",
      "end": "9:31",
      "text": "the other colors are gray and black gray"
    },
    {
      "start": "9:31",
      "end": "9:33",
      "text": "the other colors are gray and black gray would mean we have partially explored"
    },
    {
      "start": "9:33",
      "end": "9:33",
      "text": "would mean we have partially explored"
    },
    {
      "start": "9:33",
      "end": "9:35",
      "text": "would mean we have partially explored that vertex and it is still under"
    },
    {
      "start": "9:35",
      "end": "9:35",
      "text": "that vertex and it is still under"
    },
    {
      "start": "9:35",
      "end": "9:38",
      "text": "that vertex and it is still under process some of its neighbors have been"
    },
    {
      "start": "9:38",
      "end": "9:38",
      "text": "process some of its neighbors have been"
    },
    {
      "start": "9:38",
      "end": "9:39",
      "text": "process some of its neighbors have been explored some of them have not been"
    },
    {
      "start": "9:39",
      "end": "9:39",
      "text": "explored some of them have not been"
    },
    {
      "start": "9:39",
      "end": "9:43",
      "text": "explored some of them have not been black basically means all it's that"
    },
    {
      "start": "9:43",
      "end": "9:43",
      "text": "black basically means all it's that"
    },
    {
      "start": "9:43",
      "end": "9:45",
      "text": "black basically means all it's that vertex everything that we have to do"
    },
    {
      "start": "9:45",
      "end": "9:45",
      "text": "vertex everything that we have to do"
    },
    {
      "start": "9:45",
      "end": "9:48",
      "text": "vertex everything that we have to do with respect to that vertex is over we"
    },
    {
      "start": "9:48",
      "end": "9:48",
      "text": "with respect to that vertex is over we"
    },
    {
      "start": "9:48",
      "end": "9:50",
      "text": "with respect to that vertex is over we have we have finished the processing of"
    },
    {
      "start": "9:50",
      "end": "9:50",
      "text": "have we have finished the processing of"
    },
    {
      "start": "9:50",
      "end": "9:52",
      "text": "have we have finished the processing of that particular vertex and there will be"
    },
    {
      "start": "9:52",
      "end": "9:52",
      "text": "that particular vertex and there will be"
    },
    {
      "start": "9:52",
      "end": "9:54",
      "text": "that particular vertex and there will be another parameter associated with each"
    },
    {
      "start": "9:54",
      "end": "9:54",
      "text": "another parameter associated with each"
    },
    {
      "start": "9:54",
      "end": "10:00",
      "text": "another parameter associated with each vertex that will be its predecessor so"
    },
    {
      "start": "10:00",
      "end": "10:00",
      "text": "vertex that will be its predecessor so"
    },
    {
      "start": "10:00",
      "end": "10:04",
      "text": "vertex that will be its predecessor so we will denote it by u dot Phi so u dot"
    },
    {
      "start": "10:04",
      "end": "10:04",
      "text": "we will denote it by u dot Phi so u dot"
    },
    {
      "start": "10:04",
      "end": "10:05",
      "text": "we will denote it by u dot Phi so u dot v would mean the predecessor of U and"
    },
    {
      "start": "10:05",
      "end": "10:05",
      "text": "v would mean the predecessor of U and"
    },
    {
      "start": "10:05",
      "end": "10:13",
      "text": "v would mean the predecessor of U and this is the vertex from which"
    },
    {
      "start": "10:23",
      "end": "10:23",
      "text": "we reached vertex u so that will be the"
    },
    {
      "start": "10:23",
      "end": "10:27",
      "text": "we reached vertex u so that will be the predecessor of U now our algorithm the"
    },
    {
      "start": "10:27",
      "end": "10:27",
      "text": "predecessor of U now our algorithm the"
    },
    {
      "start": "10:27",
      "end": "10:31",
      "text": "predecessor of U now our algorithm the way it works is it will have a queue and"
    },
    {
      "start": "10:31",
      "end": "10:31",
      "text": "way it works is it will have a queue and"
    },
    {
      "start": "10:31",
      "end": "10:34",
      "text": "way it works is it will have a queue and we will push these vertices into a queue"
    },
    {
      "start": "10:34",
      "end": "10:34",
      "text": "we will push these vertices into a queue"
    },
    {
      "start": "10:34",
      "end": "10:37",
      "text": "we will push these vertices into a queue as the algorithm progresses and after"
    },
    {
      "start": "10:37",
      "end": "10:37",
      "text": "as the algorithm progresses and after"
    },
    {
      "start": "10:37",
      "end": "10:40",
      "text": "as the algorithm progresses and after the process all processing the scan is"
    },
    {
      "start": "10:40",
      "end": "10:40",
      "text": "the process all processing the scan is"
    },
    {
      "start": "10:40",
      "end": "10:42",
      "text": "the process all processing the scan is done would have visited all the vertices"
    },
    {
      "start": "10:42",
      "end": "10:42",
      "text": "done would have visited all the vertices"
    },
    {
      "start": "10:42",
      "end": "10:46",
      "text": "done would have visited all the vertices from a given starting starting vertex we"
    },
    {
      "start": "10:46",
      "end": "10:46",
      "text": "from a given starting starting vertex we"
    },
    {
      "start": "10:46",
      "end": "10:49",
      "text": "from a given starting starting vertex we will assume that the initial graph that"
    },
    {
      "start": "10:49",
      "end": "10:49",
      "text": "will assume that the initial graph that"
    },
    {
      "start": "10:49",
      "end": "10:52",
      "text": "will assume that the initial graph that is given to us is an undirected graph"
    },
    {
      "start": "10:52",
      "end": "10:52",
      "text": "is given to us is an undirected graph"
    },
    {
      "start": "10:52",
      "end": "10:56",
      "text": "is given to us is an undirected graph which is a connected graph of course BFS"
    },
    {
      "start": "10:56",
      "end": "10:56",
      "text": "which is a connected graph of course BFS"
    },
    {
      "start": "10:56",
      "end": "10:58",
      "text": "which is a connected graph of course BFS would work even if the graph was a"
    },
    {
      "start": "10:58",
      "end": "10:58",
      "text": "would work even if the graph was a"
    },
    {
      "start": "10:58",
      "end": "11:01",
      "text": "would work even if the graph was a directed graph and if it was a"
    },
    {
      "start": "11:01",
      "end": "11:01",
      "text": "directed graph and if it was a"
    },
    {
      "start": "11:01",
      "end": "11:03",
      "text": "directed graph and if it was a disconnected graph as well when the"
    },
    {
      "start": "11:03",
      "end": "11:03",
      "text": "disconnected graph as well when the"
    },
    {
      "start": "11:03",
      "end": "11:05",
      "text": "disconnected graph as well when the graph is disconnected what we can do is"
    },
    {
      "start": "11:05",
      "end": "11:05",
      "text": "graph is disconnected what we can do is"
    },
    {
      "start": "11:05",
      "end": "11:10",
      "text": "graph is disconnected what we can do is we can start a BFS at some arbitrary"
    },
    {
      "start": "11:10",
      "end": "11:10",
      "text": "we can start a BFS at some arbitrary"
    },
    {
      "start": "11:10",
      "end": "11:14",
      "text": "we can start a BFS at some arbitrary node in each connected component we"
    },
    {
      "start": "11:14",
      "end": "11:14",
      "text": "node in each connected component we"
    },
    {
      "start": "11:14",
      "end": "11:16",
      "text": "node in each connected component we might need to discover what are the"
    },
    {
      "start": "11:16",
      "end": "11:16",
      "text": "might need to discover what are the"
    },
    {
      "start": "11:16",
      "end": "11:19",
      "text": "might need to discover what are the connected components or we could just"
    },
    {
      "start": "11:19",
      "end": "11:19",
      "text": "connected components or we could just"
    },
    {
      "start": "11:19",
      "end": "11:22",
      "text": "connected components or we could just start BFS at every vertex of the graph"
    },
    {
      "start": "11:22",
      "end": "11:22",
      "text": "start BFS at every vertex of the graph"
    },
    {
      "start": "11:22",
      "end": "11:25",
      "text": "start BFS at every vertex of the graph they start over this BFS at every vertex"
    },
    {
      "start": "11:25",
      "end": "11:25",
      "text": "they start over this BFS at every vertex"
    },
    {
      "start": "11:25",
      "end": "11:28",
      "text": "they start over this BFS at every vertex of graph we need to check whether a"
    },
    {
      "start": "11:28",
      "end": "11:28",
      "text": "of graph we need to check whether a"
    },
    {
      "start": "11:28",
      "end": "11:31",
      "text": "of graph we need to check whether a certain vertex has already been covered"
    },
    {
      "start": "11:31",
      "end": "11:31",
      "text": "certain vertex has already been covered"
    },
    {
      "start": "11:31",
      "end": "11:35",
      "text": "certain vertex has already been covered by any other previous BFS so while doing"
    },
    {
      "start": "11:35",
      "end": "11:35",
      "text": "by any other previous BFS so while doing"
    },
    {
      "start": "11:35",
      "end": "11:37",
      "text": "by any other previous BFS so while doing the breadth-first search if we have"
    },
    {
      "start": "11:37",
      "end": "11:37",
      "text": "the breadth-first search if we have"
    },
    {
      "start": "11:37",
      "end": "11:41",
      "text": "the breadth-first search if we have already seen some vertex as part of"
    },
    {
      "start": "11:41",
      "end": "11:41",
      "text": "already seen some vertex as part of"
    },
    {
      "start": "11:41",
      "end": "11:43",
      "text": "already seen some vertex as part of searching certain other component we can"
    },
    {
      "start": "11:43",
      "end": "11:43",
      "text": "searching certain other component we can"
    },
    {
      "start": "11:43",
      "end": "11:46",
      "text": "searching certain other component we can ignore that BFS search so that"
    },
    {
      "start": "11:46",
      "end": "11:46",
      "text": "ignore that BFS search so that"
    },
    {
      "start": "11:46",
      "end": "11:49",
      "text": "ignore that BFS search so that modification can be made and directed"
    },
    {
      "start": "11:49",
      "end": "11:49",
      "text": "modification can be made and directed"
    },
    {
      "start": "11:49",
      "end": "11:52",
      "text": "modification can be made and directed graphs the essentially the same"
    },
    {
      "start": "11:52",
      "end": "11:52",
      "text": "graphs the essentially the same"
    },
    {
      "start": "11:52",
      "end": "11:55",
      "text": "graphs the essentially the same algorithm would work but for simple if"
    },
    {
      "start": "11:55",
      "end": "11:55",
      "text": "algorithm would work but for simple if"
    },
    {
      "start": "11:55",
      "end": "11:58",
      "text": "algorithm would work but for simple if we simply just to keep keep things"
    },
    {
      "start": "11:58",
      "end": "11:58",
      "text": "we simply just to keep keep things"
    },
    {
      "start": "11:58",
      "end": "12:01",
      "text": "we simply just to keep keep things simple we will just look at a undirected"
    },
    {
      "start": "12:01",
      "end": "12:01",
      "text": "simple we will just look at a undirected"
    },
    {
      "start": "12:01",
      "end": "12:08",
      "text": "simple we will just look at a undirected example okay so in the BFS algorithm we"
    },
    {
      "start": "12:08",
      "end": "12:08",
      "text": "example okay so in the BFS algorithm we"
    },
    {
      "start": "12:08",
      "end": "12:13",
      "text": "example okay so in the BFS algorithm we have to initialize the colors so there's"
    },
    {
      "start": "12:13",
      "end": "12:13",
      "text": "have to initialize the colors so there's"
    },
    {
      "start": "12:13",
      "end": "12:18",
      "text": "have to initialize the colors so there's an initialization phase where in for"
    },
    {
      "start": "12:18",
      "end": "12:19",
      "text": "an initialization phase where in for"
    },
    {
      "start": "12:19",
      "end": "12:22",
      "text": "an initialization phase where in for every vertex so u dot color will be set"
    },
    {
      "start": "12:22",
      "end": "12:22",
      "text": "every vertex so u dot color will be set"
    },
    {
      "start": "12:22",
      "end": "12:27",
      "text": "every vertex so u dot color will be set to white that means and the start"
    },
    {
      "start": "12:27",
      "end": "12:27",
      "text": "to white that means and the start"
    },
    {
      "start": "12:27",
      "end": "12:36",
      "text": "to white that means and the start these are all unexplored so we will"
    },
    {
      "start": "12:36",
      "end": "12:36",
      "text": "these are all unexplored so we will"
    },
    {
      "start": "12:36",
      "end": "12:40",
      "text": "these are all unexplored so we will assume that the BFS algorithm which"
    },
    {
      "start": "12:40",
      "end": "12:40",
      "text": "assume that the BFS algorithm which"
    },
    {
      "start": "12:40",
      "end": "12:43",
      "text": "assume that the BFS algorithm which means we may call it as BFS it has two"
    },
    {
      "start": "12:43",
      "end": "12:43",
      "text": "means we may call it as BFS it has two"
    },
    {
      "start": "12:43",
      "end": "12:46",
      "text": "means we may call it as BFS it has two parameters the given graph and the"
    },
    {
      "start": "12:46",
      "end": "12:46",
      "text": "parameters the given graph and the"
    },
    {
      "start": "12:46",
      "end": "12:51",
      "text": "parameters the given graph and the starting vertex s and for every vertex"
    },
    {
      "start": "12:51",
      "end": "12:51",
      "text": "starting vertex s and for every vertex"
    },
    {
      "start": "12:51",
      "end": "12:55",
      "text": "starting vertex s and for every vertex the parent u dot pi will be equal to nil"
    },
    {
      "start": "12:55",
      "end": "12:55",
      "text": "the parent u dot pi will be equal to nil"
    },
    {
      "start": "12:55",
      "end": "12:57",
      "text": "the parent u dot pi will be equal to nil so initially we do not know what is the"
    },
    {
      "start": "12:57",
      "end": "12:57",
      "text": "so initially we do not know what is the"
    },
    {
      "start": "12:57",
      "end": "12:59",
      "text": "so initially we do not know what is the predecessor or parent of a particular"
    },
    {
      "start": "12:59",
      "end": "12:59",
      "text": "predecessor or parent of a particular"
    },
    {
      "start": "12:59",
      "end": "13:02",
      "text": "predecessor or parent of a particular vertex so we will just set it to PI as"
    },
    {
      "start": "13:02",
      "end": "13:02",
      "text": "vertex so we will just set it to PI as"
    },
    {
      "start": "13:02",
      "end": "13:05",
      "text": "vertex so we will just set it to PI as our algorithm progresses when a node is"
    },
    {
      "start": "13:05",
      "end": "13:05",
      "text": "our algorithm progresses when a node is"
    },
    {
      "start": "13:05",
      "end": "13:08",
      "text": "our algorithm progresses when a node is discovered for the very first time the"
    },
    {
      "start": "13:08",
      "end": "13:08",
      "text": "discovered for the very first time the"
    },
    {
      "start": "13:08",
      "end": "13:11",
      "text": "discovered for the very first time the node the edge which caused the discovery"
    },
    {
      "start": "13:11",
      "end": "13:11",
      "text": "node the edge which caused the discovery"
    },
    {
      "start": "13:11",
      "end": "13:14",
      "text": "node the edge which caused the discovery of this particular node will be explored"
    },
    {
      "start": "13:14",
      "end": "13:14",
      "text": "of this particular node will be explored"
    },
    {
      "start": "13:14",
      "end": "13:17",
      "text": "of this particular node will be explored and that edge will tell us what is the"
    },
    {
      "start": "13:17",
      "end": "13:17",
      "text": "and that edge will tell us what is the"
    },
    {
      "start": "13:17",
      "end": "13:21",
      "text": "and that edge will tell us what is the predecessor of the particular node that"
    },
    {
      "start": "13:21",
      "end": "13:21",
      "text": "predecessor of the particular node that"
    },
    {
      "start": "13:21",
      "end": "13:24",
      "text": "predecessor of the particular node that we have just now found so initially this"
    },
    {
      "start": "13:24",
      "end": "13:24",
      "text": "we have just now found so initially this"
    },
    {
      "start": "13:24",
      "end": "13:31",
      "text": "we have just now found so initially this is set to nil and then we can also"
    },
    {
      "start": "13:31",
      "end": "13:31",
      "text": "is set to nil and then we can also"
    },
    {
      "start": "13:31",
      "end": "13:33",
      "text": "is set to nil and then we can also initialize the queue we will call it as"
    },
    {
      "start": "13:33",
      "end": "13:33",
      "text": "initialize the queue we will call it as"
    },
    {
      "start": "13:33",
      "end": "13:37",
      "text": "initialize the queue we will call it as a the queue we will name it as queue"
    },
    {
      "start": "13:37",
      "end": "13:37",
      "text": "a the queue we will name it as queue"
    },
    {
      "start": "13:37",
      "end": "13:41",
      "text": "a the queue we will name it as queue itself and this is set to empty ok so"
    },
    {
      "start": "13:41",
      "end": "13:41",
      "text": "itself and this is set to empty ok so"
    },
    {
      "start": "13:41",
      "end": "13:46",
      "text": "itself and this is set to empty ok so there is an empty queue the queue queue"
    },
    {
      "start": "13:46",
      "end": "13:46",
      "text": "there is an empty queue the queue queue"
    },
    {
      "start": "13:46",
      "end": "13:56",
      "text": "there is an empty queue the queue queue will be used to track the vertices and"
    },
    {
      "start": "13:56",
      "end": "13:56",
      "text": "will be used to track the vertices and"
    },
    {
      "start": "13:56",
      "end": "14:01",
      "text": "will be used to track the vertices and as it is initialized to empty and then"
    },
    {
      "start": "14:01",
      "end": "14:01",
      "text": "as it is initialized to empty and then"
    },
    {
      "start": "14:01",
      "end": "14:05",
      "text": "as it is initialized to empty and then what the algorithm does is it will"
    },
    {
      "start": "14:05",
      "end": "14:05",
      "text": "what the algorithm does is it will"
    },
    {
      "start": "14:05",
      "end": "14:08",
      "text": "what the algorithm does is it will repeatedly explore for whatever is there"
    },
    {
      "start": "14:08",
      "end": "14:08",
      "text": "repeatedly explore for whatever is there"
    },
    {
      "start": "14:08",
      "end": "14:12",
      "text": "repeatedly explore for whatever is there in the queue"
    },
    {
      "start": "14:18",
      "end": "14:18",
      "text": "so after the queue has been initialized"
    },
    {
      "start": "14:18",
      "end": "14:21",
      "text": "so after the queue has been initialized we have to add one element so we will"
    },
    {
      "start": "14:21",
      "end": "14:21",
      "text": "we have to add one element so we will"
    },
    {
      "start": "14:21",
      "end": "14:28",
      "text": "we have to add one element so we will add s to queue the starting element that"
    },
    {
      "start": "14:28",
      "end": "14:28",
      "text": "add s to queue the starting element that"
    },
    {
      "start": "14:28",
      "end": "14:31",
      "text": "add s to queue the starting element that we had the the starting vertex that's"
    },
    {
      "start": "14:31",
      "end": "14:31",
      "text": "we had the the starting vertex that's"
    },
    {
      "start": "14:31",
      "end": "14:34",
      "text": "we had the the starting vertex that's added to the queue will be the first"
    },
    {
      "start": "14:34",
      "end": "14:34",
      "text": "added to the queue will be the first"
    },
    {
      "start": "14:34",
      "end": "14:42",
      "text": "added to the queue will be the first step of the algorithm and then while"
    },
    {
      "start": "14:42",
      "end": "14:42",
      "text": "step of the algorithm and then while"
    },
    {
      "start": "14:42",
      "end": "14:48",
      "text": "step of the algorithm and then while queue is non-empty we will repeatedly do"
    },
    {
      "start": "14:48",
      "end": "14:48",
      "text": "queue is non-empty we will repeatedly do"
    },
    {
      "start": "14:48",
      "end": "14:53",
      "text": "queue is non-empty we will repeatedly do certain actions so delete an element"
    },
    {
      "start": "14:53",
      "end": "14:53",
      "text": "certain actions so delete an element"
    },
    {
      "start": "14:53",
      "end": "15:00",
      "text": "certain actions so delete an element from the queue so we will call this"
    },
    {
      "start": "15:00",
      "end": "15:00",
      "text": "from the queue so we will call this"
    },
    {
      "start": "15:00",
      "end": "15:05",
      "text": "from the queue so we will call this deleted element as V from Q so Q is a"
    },
    {
      "start": "15:05",
      "end": "15:05",
      "text": "deleted element as V from Q so Q is a"
    },
    {
      "start": "15:05",
      "end": "15:08",
      "text": "deleted element as V from Q so Q is a first in first out data structure which"
    },
    {
      "start": "15:08",
      "end": "15:08",
      "text": "first in first out data structure which"
    },
    {
      "start": "15:08",
      "end": "15:10",
      "text": "first in first out data structure which means the element that you've added they"
    },
    {
      "start": "15:10",
      "end": "15:10",
      "text": "means the element that you've added they"
    },
    {
      "start": "15:10",
      "end": "15:13",
      "text": "means the element that you've added they will be removed in the same order so at"
    },
    {
      "start": "15:13",
      "end": "15:13",
      "text": "will be removed in the same order so at"
    },
    {
      "start": "15:13",
      "end": "15:15",
      "text": "will be removed in the same order so at the start we have added just one element"
    },
    {
      "start": "15:15",
      "end": "15:15",
      "text": "the start we have added just one element"
    },
    {
      "start": "15:15",
      "end": "15:17",
      "text": "the start we have added just one element so when you try to delete the first"
    },
    {
      "start": "15:17",
      "end": "15:17",
      "text": "so when you try to delete the first"
    },
    {
      "start": "15:17",
      "end": "15:19",
      "text": "so when you try to delete the first element that will be deleted it is going"
    },
    {
      "start": "15:19",
      "end": "15:19",
      "text": "element that will be deleted it is going"
    },
    {
      "start": "15:19",
      "end": "15:26",
      "text": "element that will be deleted it is going to be s and then for every neighbor of V"
    },
    {
      "start": "15:26",
      "end": "15:26",
      "text": "to be s and then for every neighbor of V"
    },
    {
      "start": "15:26",
      "end": "15:28",
      "text": "to be s and then for every neighbor of V so we have deleted one particular"
    },
    {
      "start": "15:28",
      "end": "15:28",
      "text": "so we have deleted one particular"
    },
    {
      "start": "15:28",
      "end": "15:30",
      "text": "so we have deleted one particular element for each of its neighbors we"
    },
    {
      "start": "15:30",
      "end": "15:30",
      "text": "element for each of its neighbors we"
    },
    {
      "start": "15:30",
      "end": "15:34",
      "text": "element for each of its neighbors we would we would start exploring those"
    },
    {
      "start": "15:34",
      "end": "15:34",
      "text": "would we would start exploring those"
    },
    {
      "start": "15:34",
      "end": "15:44",
      "text": "would we would start exploring those vertices so for every neighbor let's say"
    },
    {
      "start": "15:44",
      "end": "15:44",
      "text": "vertices so for every neighbor let's say"
    },
    {
      "start": "15:44",
      "end": "15:54",
      "text": "vertices so for every neighbor let's say you of V we will do the following so we"
    },
    {
      "start": "15:54",
      "end": "15:54",
      "text": "you of V we will do the following so we"
    },
    {
      "start": "15:54",
      "end": "15:57",
      "text": "you of V we will do the following so we have one particular node that is deleted"
    },
    {
      "start": "15:57",
      "end": "15:57",
      "text": "have one particular node that is deleted"
    },
    {
      "start": "15:57",
      "end": "16:00",
      "text": "have one particular node that is deleted and that might have many neighbors and"
    },
    {
      "start": "16:00",
      "end": "16:00",
      "text": "and that might have many neighbors and"
    },
    {
      "start": "16:00",
      "end": "16:02",
      "text": "and that might have many neighbors and for each of the neighbor if it is a none"
    },
    {
      "start": "16:02",
      "end": "16:02",
      "text": "for each of the neighbor if it is a none"
    },
    {
      "start": "16:02",
      "end": "16:07",
      "text": "for each of the neighbor if it is a none explode neighbor means no means this"
    },
    {
      "start": "16:07",
      "end": "16:07",
      "text": "explode neighbor means no means this"
    },
    {
      "start": "16:07",
      "end": "16:09",
      "text": "explode neighbor means no means this vertex vertex has not been explored"
    },
    {
      "start": "16:09",
      "end": "16:09",
      "text": "vertex vertex has not been explored"
    },
    {
      "start": "16:09",
      "end": "16:12",
      "text": "vertex vertex has not been explored before we would want to do something"
    },
    {
      "start": "16:12",
      "end": "16:12",
      "text": "before we would want to do something"
    },
    {
      "start": "16:12",
      "end": "16:14",
      "text": "before we would want to do something with it if it has already been explored"
    },
    {
      "start": "16:14",
      "end": "16:14",
      "text": "with it if it has already been explored"
    },
    {
      "start": "16:14",
      "end": "16:20",
      "text": "with it if it has already been explored we will just leave it as it is so if you"
    },
    {
      "start": "16:20",
      "end": "16:20",
      "text": "we will just leave it as it is so if you"
    },
    {
      "start": "16:20",
      "end": "16:24",
      "text": "we will just leave it as it is so if you dot color is equal to white"
    },
    {
      "start": "16:24",
      "end": "16:24",
      "text": "dot color is equal to white"
    },
    {
      "start": "16:24",
      "end": "16:25",
      "text": "dot color is equal to white [Music]"
    },
    {
      "start": "16:25",
      "end": "16:25",
      "text": "[Music]"
    },
    {
      "start": "16:25",
      "end": "16:28",
      "text": "[Music] in that case what we will have to do is"
    },
    {
      "start": "16:28",
      "end": "16:28",
      "text": "in that case what we will have to do is"
    },
    {
      "start": "16:28",
      "end": "16:30",
      "text": "in that case what we will have to do is we will have to push this into the queue"
    },
    {
      "start": "16:30",
      "end": "16:30",
      "text": "we will have to push this into the queue"
    },
    {
      "start": "16:30",
      "end": "16:34",
      "text": "we will have to push this into the queue and before adding it into the queue we"
    },
    {
      "start": "16:34",
      "end": "16:34",
      "text": "and before adding it into the queue we"
    },
    {
      "start": "16:34",
      "end": "16:37",
      "text": "and before adding it into the queue we will change its color so this means we"
    },
    {
      "start": "16:37",
      "end": "16:37",
      "text": "will change its color so this means we"
    },
    {
      "start": "16:37",
      "end": "16:39",
      "text": "will change its color so this means we need to process it so we will change its"
    },
    {
      "start": "16:39",
      "end": "16:39",
      "text": "need to process it so we will change its"
    },
    {
      "start": "16:39",
      "end": "16:41",
      "text": "need to process it so we will change its color and it is the processing has begun"
    },
    {
      "start": "16:41",
      "end": "16:41",
      "text": "color and it is the processing has begun"
    },
    {
      "start": "16:41",
      "end": "16:45",
      "text": "color and it is the processing has begun you wrote color is equal to gray and its"
    },
    {
      "start": "16:45",
      "end": "16:45",
      "text": "you wrote color is equal to gray and its"
    },
    {
      "start": "16:45",
      "end": "16:49",
      "text": "you wrote color is equal to gray and its parent you dot predecessor this we will"
    },
    {
      "start": "16:49",
      "end": "16:49",
      "text": "parent you dot predecessor this we will"
    },
    {
      "start": "16:49",
      "end": "16:51",
      "text": "parent you dot predecessor this we will set it to V because V was the vertex"
    },
    {
      "start": "16:51",
      "end": "16:51",
      "text": "set it to V because V was the vertex"
    },
    {
      "start": "16:51",
      "end": "16:55",
      "text": "set it to V because V was the vertex from which we visited u because U is a"
    },
    {
      "start": "16:55",
      "end": "16:55",
      "text": "from which we visited u because U is a"
    },
    {
      "start": "16:55",
      "end": "16:58",
      "text": "from which we visited u because U is a neighbor of V okay so the parent is"
    },
    {
      "start": "16:58",
      "end": "16:58",
      "text": "neighbor of V okay so the parent is"
    },
    {
      "start": "16:58",
      "end": "17:01",
      "text": "neighbor of V okay so the parent is being set and then we can add you to the"
    },
    {
      "start": "17:01",
      "end": "17:01",
      "text": "being set and then we can add you to the"
    },
    {
      "start": "17:01",
      "end": "17:09",
      "text": "being set and then we can add you to the queue add you to queue and after this"
    },
    {
      "start": "17:09",
      "end": "17:09",
      "text": "queue add you to queue and after this"
    },
    {
      "start": "17:09",
      "end": "17:13",
      "text": "queue add you to queue and after this processing is done for every neighbor we"
    },
    {
      "start": "17:13",
      "end": "17:13",
      "text": "processing is done for every neighbor we"
    },
    {
      "start": "17:13",
      "end": "17:19",
      "text": "processing is done for every neighbor we can change the color of the vertex V to"
    },
    {
      "start": "17:19",
      "end": "17:19",
      "text": "can change the color of the vertex V to"
    },
    {
      "start": "17:19",
      "end": "17:23",
      "text": "can change the color of the vertex V to black because V has been processed so V"
    },
    {
      "start": "17:23",
      "end": "17:23",
      "text": "black because V has been processed so V"
    },
    {
      "start": "17:23",
      "end": "17:30",
      "text": "black because V has been processed so V dot color is equal to black okay so"
    },
    {
      "start": "17:30",
      "end": "17:30",
      "text": "dot color is equal to black okay so"
    },
    {
      "start": "17:30",
      "end": "17:33",
      "text": "dot color is equal to black okay so that's the algorithm so now let's see"
    },
    {
      "start": "17:33",
      "end": "17:33",
      "text": "that's the algorithm so now let's see"
    },
    {
      "start": "17:33",
      "end": "17:37",
      "text": "that's the algorithm so now let's see this in action so let's say we have this"
    },
    {
      "start": "17:37",
      "end": "17:37",
      "text": "this in action so let's say we have this"
    },
    {
      "start": "17:37",
      "end": "18:03",
      "text": "this in action so let's say we have this following graph"
    },
    {
      "start": "18:07",
      "end": "18:07",
      "text": "if you start at vertex one so this we"
    },
    {
      "start": "18:07",
      "end": "18:11",
      "text": "if you start at vertex one so this we will maintain a queue so there's our"
    },
    {
      "start": "18:11",
      "end": "18:11",
      "text": "will maintain a queue so there's our"
    },
    {
      "start": "18:11",
      "end": "18:16",
      "text": "will maintain a queue so there's our initial queue and we will first add"
    },
    {
      "start": "18:16",
      "end": "18:16",
      "text": "initial queue and we will first add"
    },
    {
      "start": "18:16",
      "end": "18:21",
      "text": "initial queue and we will first add vertex one to the queue that's the only"
    },
    {
      "start": "18:21",
      "end": "18:21",
      "text": "vertex one to the queue that's the only"
    },
    {
      "start": "18:21",
      "end": "18:24",
      "text": "vertex one to the queue that's the only element that is there in the queue and"
    },
    {
      "start": "18:24",
      "end": "18:24",
      "text": "element that is there in the queue and"
    },
    {
      "start": "18:24",
      "end": "18:28",
      "text": "element that is there in the queue and then we delete one so initially the"
    },
    {
      "start": "18:28",
      "end": "18:28",
      "text": "then we delete one so initially the"
    },
    {
      "start": "18:28",
      "end": "18:30",
      "text": "then we delete one so initially the color of all vertices are essentially"
    },
    {
      "start": "18:30",
      "end": "18:30",
      "text": "color of all vertices are essentially"
    },
    {
      "start": "18:30",
      "end": "18:34",
      "text": "color of all vertices are essentially white okay once we have added the color"
    },
    {
      "start": "18:34",
      "end": "18:34",
      "text": "white okay once we have added the color"
    },
    {
      "start": "18:34",
      "end": "18:37",
      "text": "white okay once we have added the color of that vertex changes it becomes gray"
    },
    {
      "start": "18:37",
      "end": "18:37",
      "text": "of that vertex changes it becomes gray"
    },
    {
      "start": "18:37",
      "end": "18:41",
      "text": "of that vertex changes it becomes gray so one is now a gray vortex and we will"
    },
    {
      "start": "18:41",
      "end": "18:41",
      "text": "so one is now a gray vortex and we will"
    },
    {
      "start": "18:41",
      "end": "18:44",
      "text": "so one is now a gray vortex and we will look at all the neighbors of you and"
    },
    {
      "start": "18:44",
      "end": "18:44",
      "text": "look at all the neighbors of you and"
    },
    {
      "start": "18:44",
      "end": "18:48",
      "text": "look at all the neighbors of you and change its color and we will set its"
    },
    {
      "start": "18:48",
      "end": "18:48",
      "text": "change its color and we will set its"
    },
    {
      "start": "18:48",
      "end": "18:53",
      "text": "change its color and we will set its parent to one so the vertex one has two"
    },
    {
      "start": "18:53",
      "end": "18:53",
      "text": "parent to one so the vertex one has two"
    },
    {
      "start": "18:53",
      "end": "18:56",
      "text": "parent to one so the vertex one has two neighbors namely namely two and three"
    },
    {
      "start": "18:56",
      "end": "18:56",
      "text": "neighbors namely namely two and three"
    },
    {
      "start": "18:56",
      "end": "18:58",
      "text": "neighbors namely namely two and three okay so two and three their color is"
    },
    {
      "start": "18:58",
      "end": "18:58",
      "text": "okay so two and three their color is"
    },
    {
      "start": "18:58",
      "end": "19:05",
      "text": "okay so two and three their color is being changed to gray and the parent is"
    },
    {
      "start": "19:05",
      "end": "19:05",
      "text": "being changed to gray and the parent is"
    },
    {
      "start": "19:05",
      "end": "19:09",
      "text": "being changed to gray and the parent is being set to vertex one so there is"
    },
    {
      "start": "19:09",
      "end": "19:09",
      "text": "being set to vertex one so there is"
    },
    {
      "start": "19:09",
      "end": "19:12",
      "text": "being set to vertex one so there is going to be so by this arrow I will"
    },
    {
      "start": "19:12",
      "end": "19:12",
      "text": "going to be so by this arrow I will"
    },
    {
      "start": "19:12",
      "end": "19:15",
      "text": "going to be so by this arrow I will indicate the parent so twos name a"
    },
    {
      "start": "19:15",
      "end": "19:15",
      "text": "indicate the parent so twos name a"
    },
    {
      "start": "19:15",
      "end": "19:20",
      "text": "indicate the parent so twos name a parent is 1 3 s parent is also what ok"
    },
    {
      "start": "19:20",
      "end": "19:20",
      "text": "parent is 1 3 s parent is also what ok"
    },
    {
      "start": "19:20",
      "end": "19:22",
      "text": "parent is 1 3 s parent is also what ok and after this and so this is a step"
    },
    {
      "start": "19:22",
      "end": "19:22",
      "text": "and after this and so this is a step"
    },
    {
      "start": "19:22",
      "end": "19:23",
      "text": "and after this and so this is a step that you do and 2 and 3 has been added"
    },
    {
      "start": "19:23",
      "end": "19:23",
      "text": "that you do and 2 and 3 has been added"
    },
    {
      "start": "19:23",
      "end": "19:26",
      "text": "that you do and 2 and 3 has been added so we may assume that first 2 is added"
    },
    {
      "start": "19:26",
      "end": "19:26",
      "text": "so we may assume that first 2 is added"
    },
    {
      "start": "19:26",
      "end": "19:28",
      "text": "so we may assume that first 2 is added and after the processing has done 3 is"
    },
    {
      "start": "19:28",
      "end": "19:28",
      "text": "and after the processing has done 3 is"
    },
    {
      "start": "19:28",
      "end": "19:34",
      "text": "and after the processing has done 3 is added okay so vertex 2 would be added"
    },
    {
      "start": "19:34",
      "end": "19:34",
      "text": "added okay so vertex 2 would be added"
    },
    {
      "start": "19:34",
      "end": "19:37",
      "text": "added okay so vertex 2 would be added and vertex 3 would be added and we would"
    },
    {
      "start": "19:37",
      "end": "19:37",
      "text": "and vertex 3 would be added and we would"
    },
    {
      "start": "19:37",
      "end": "19:43",
      "text": "and vertex 3 would be added and we would have taken off one after this ok so that"
    },
    {
      "start": "19:43",
      "end": "19:43",
      "text": "have taken off one after this ok so that"
    },
    {
      "start": "19:43",
      "end": "19:45",
      "text": "have taken off one after this ok so that would that would have been the first"
    },
    {
      "start": "19:45",
      "end": "19:45",
      "text": "would that would have been the first"
    },
    {
      "start": "19:45",
      "end": "19:47",
      "text": "would that would have been the first step we deleted that element and we have"
    },
    {
      "start": "19:47",
      "end": "19:47",
      "text": "step we deleted that element and we have"
    },
    {
      "start": "19:47",
      "end": "19:52",
      "text": "step we deleted that element and we have changed the color of 1 to black ok so"
    },
    {
      "start": "19:52",
      "end": "19:52",
      "text": "changed the color of 1 to black ok so"
    },
    {
      "start": "19:52",
      "end": "19:57",
      "text": "changed the color of 1 to black ok so now it's no longer gray but it has"
    },
    {
      "start": "19:57",
      "end": "19:57",
      "text": "now it's no longer gray but it has"
    },
    {
      "start": "19:57",
      "end": "20:00",
      "text": "now it's no longer gray but it has become black indicating that full"
    },
    {
      "start": "20:00",
      "end": "20:00",
      "text": "become black indicating that full"
    },
    {
      "start": "20:00",
      "end": "20:03",
      "text": "become black indicating that full processing is over the queue is still"
    },
    {
      "start": "20:03",
      "end": "20:03",
      "text": "processing is over the queue is still"
    },
    {
      "start": "20:03",
      "end": "20:08",
      "text": "processing is over the queue is still not empty so we will pick out vertex 2"
    },
    {
      "start": "20:08",
      "end": "20:08",
      "text": "not empty so we will pick out vertex 2"
    },
    {
      "start": "20:08",
      "end": "20:13",
      "text": "not empty so we will pick out vertex 2 and if you look at vertex 2"
    },
    {
      "start": "20:21",
      "end": "20:21",
      "text": "that has been deleted once vertex 2 has"
    },
    {
      "start": "20:21",
      "end": "20:22",
      "text": "that has been deleted once vertex 2 has been deleted we will look at all its"
    },
    {
      "start": "20:22",
      "end": "20:22",
      "text": "been deleted we will look at all its"
    },
    {
      "start": "20:22",
      "end": "20:26",
      "text": "been deleted we will look at all its neighbors vertex 2 has namely three"
    },
    {
      "start": "20:26",
      "end": "20:26",
      "text": "neighbors vertex 2 has namely three"
    },
    {
      "start": "20:26",
      "end": "20:32",
      "text": "neighbors vertex 2 has namely three neighbors one three and five sorry one"
    },
    {
      "start": "20:32",
      "end": "20:32",
      "text": "neighbors one three and five sorry one"
    },
    {
      "start": "20:32",
      "end": "20:36",
      "text": "neighbors one three and five sorry one five and six are the neighbors okay when"
    },
    {
      "start": "20:36",
      "end": "20:36",
      "text": "five and six are the neighbors okay when"
    },
    {
      "start": "20:36",
      "end": "20:40",
      "text": "five and six are the neighbors okay when you look at these neighbors five and six"
    },
    {
      "start": "20:40",
      "end": "20:40",
      "text": "you look at these neighbors five and six"
    },
    {
      "start": "20:40",
      "end": "20:44",
      "text": "you look at these neighbors five and six both are currently of color white so we"
    },
    {
      "start": "20:44",
      "end": "20:44",
      "text": "both are currently of color white so we"
    },
    {
      "start": "20:44",
      "end": "20:47",
      "text": "both are currently of color white so we can add them okay so let us say we first"
    },
    {
      "start": "20:47",
      "end": "20:47",
      "text": "can add them okay so let us say we first"
    },
    {
      "start": "20:47",
      "end": "20:52",
      "text": "can add them okay so let us say we first add five and then add six okay so that"
    },
    {
      "start": "20:52",
      "end": "20:52",
      "text": "add five and then add six okay so that"
    },
    {
      "start": "20:52",
      "end": "20:59",
      "text": "add five and then add six okay so that goes inside the cube and their color as"
    },
    {
      "start": "20:59",
      "end": "20:59",
      "text": "goes inside the cube and their color as"
    },
    {
      "start": "20:59",
      "end": "21:02",
      "text": "goes inside the cube and their color as well as parent is reset so five becomes"
    },
    {
      "start": "21:02",
      "end": "21:02",
      "text": "well as parent is reset so five becomes"
    },
    {
      "start": "21:02",
      "end": "21:06",
      "text": "well as parent is reset so five becomes the first neighbor let us say it's five"
    },
    {
      "start": "21:06",
      "end": "21:06",
      "text": "the first neighbor let us say it's five"
    },
    {
      "start": "21:06",
      "end": "21:10",
      "text": "the first neighbor let us say it's five okay so color is changed and the parent"
    },
    {
      "start": "21:10",
      "end": "21:10",
      "text": "okay so color is changed and the parent"
    },
    {
      "start": "21:10",
      "end": "21:18",
      "text": "okay so color is changed and the parent is said two and five is added and after"
    },
    {
      "start": "21:18",
      "end": "21:18",
      "text": "is said two and five is added and after"
    },
    {
      "start": "21:18",
      "end": "21:23",
      "text": "is said two and five is added and after five was added the next neighbor of two"
    },
    {
      "start": "21:23",
      "end": "21:23",
      "text": "five was added the next neighbor of two"
    },
    {
      "start": "21:23",
      "end": "21:26",
      "text": "five was added the next neighbor of two is going to be six that's also it's been"
    },
    {
      "start": "21:26",
      "end": "21:26",
      "text": "is going to be six that's also it's been"
    },
    {
      "start": "21:26",
      "end": "21:29",
      "text": "is going to be six that's also it's been to change its color to gray and we have"
    },
    {
      "start": "21:29",
      "end": "21:29",
      "text": "to change its color to gray and we have"
    },
    {
      "start": "21:29",
      "end": "21:35",
      "text": "to change its color to gray and we have a fair and for six which is two and six"
    },
    {
      "start": "21:35",
      "end": "21:35",
      "text": "a fair and for six which is two and six"
    },
    {
      "start": "21:35",
      "end": "21:39",
      "text": "a fair and for six which is two and six is being added into the queue okay so"
    },
    {
      "start": "21:39",
      "end": "21:39",
      "text": "is being added into the queue okay so"
    },
    {
      "start": "21:39",
      "end": "21:42",
      "text": "is being added into the queue okay so after five and six has been added the"
    },
    {
      "start": "21:42",
      "end": "21:42",
      "text": "after five and six has been added the"
    },
    {
      "start": "21:42",
      "end": "21:44",
      "text": "after five and six has been added the next node that you process is three"
    },
    {
      "start": "21:44",
      "end": "21:44",
      "text": "next node that you process is three"
    },
    {
      "start": "21:44",
      "end": "21:48",
      "text": "next node that you process is three three has again three neighbors one five"
    },
    {
      "start": "21:48",
      "end": "21:48",
      "text": "three has again three neighbors one five"
    },
    {
      "start": "21:48",
      "end": "21:52",
      "text": "three has again three neighbors one five and four out of them the only white"
    },
    {
      "start": "21:52",
      "end": "21:52",
      "text": "and four out of them the only white"
    },
    {
      "start": "21:52",
      "end": "21:56",
      "text": "and four out of them the only white neighbor is going to be four so that"
    },
    {
      "start": "21:56",
      "end": "21:56",
      "text": "neighbor is going to be four so that"
    },
    {
      "start": "21:56",
      "end": "21:59",
      "text": "neighbor is going to be four so that will be converted into gray and the"
    },
    {
      "start": "21:59",
      "end": "21:59",
      "text": "will be converted into gray and the"
    },
    {
      "start": "21:59",
      "end": "22:06",
      "text": "will be converted into gray and the parent would be set to three"
    },
    {
      "start": "22:10",
      "end": "22:10",
      "text": "and additionally we would have for"
    },
    {
      "start": "22:10",
      "end": "22:13",
      "text": "and additionally we would have for coming into the queue and three by the"
    },
    {
      "start": "22:13",
      "end": "22:13",
      "text": "coming into the queue and three by the"
    },
    {
      "start": "22:13",
      "end": "22:17",
      "text": "coming into the queue and three by the stage is done with repeated three the"
    },
    {
      "start": "22:17",
      "end": "22:17",
      "text": "stage is done with repeated three the"
    },
    {
      "start": "22:17",
      "end": "22:18",
      "text": "stage is done with repeated three the next element that is going to be deleted"
    },
    {
      "start": "22:18",
      "end": "22:19",
      "text": "next element that is going to be deleted"
    },
    {
      "start": "22:19",
      "end": "22:21",
      "text": "next element that is going to be deleted is five but there is no further"
    },
    {
      "start": "22:21",
      "end": "22:21",
      "text": "is five but there is no further"
    },
    {
      "start": "22:21",
      "end": "22:24",
      "text": "is five but there is no further processing to be done with five because"
    },
    {
      "start": "22:24",
      "end": "22:24",
      "text": "processing to be done with five because"
    },
    {
      "start": "22:24",
      "end": "22:27",
      "text": "processing to be done with five because all the neighbors of five would have"
    },
    {
      "start": "22:27",
      "end": "22:27",
      "text": "all the neighbors of five would have"
    },
    {
      "start": "22:27",
      "end": "22:32",
      "text": "all the neighbors of five would have been already of color other than white"
    },
    {
      "start": "22:32",
      "end": "22:32",
      "text": "been already of color other than white"
    },
    {
      "start": "22:32",
      "end": "22:35",
      "text": "been already of color other than white so five is also done so when we are"
    },
    {
      "start": "22:35",
      "end": "22:35",
      "text": "so five is also done so when we are"
    },
    {
      "start": "22:35",
      "end": "22:39",
      "text": "so five is also done so when we are deleting and after the delete phase"
    },
    {
      "start": "22:39",
      "end": "22:39",
      "text": "deleting and after the delete phase"
    },
    {
      "start": "22:39",
      "end": "22:41",
      "text": "deleting and after the delete phase after the neighbors have been processed"
    },
    {
      "start": "22:41",
      "end": "22:41",
      "text": "after the neighbors have been processed"
    },
    {
      "start": "22:41",
      "end": "22:43",
      "text": "after the neighbors have been processed we would have changed the color to black"
    },
    {
      "start": "22:43",
      "end": "22:43",
      "text": "we would have changed the color to black"
    },
    {
      "start": "22:43",
      "end": "22:47",
      "text": "we would have changed the color to black so there are we've skipped a couple of"
    },
    {
      "start": "22:47",
      "end": "22:47",
      "text": "so there are we've skipped a couple of"
    },
    {
      "start": "22:47",
      "end": "22:50",
      "text": "so there are we've skipped a couple of steps we would have changed to two black"
    },
    {
      "start": "22:50",
      "end": "22:50",
      "text": "steps we would have changed to two black"
    },
    {
      "start": "22:50",
      "end": "22:55",
      "text": "steps we would have changed to two black and three to black after that and then"
    },
    {
      "start": "22:55",
      "end": "22:55",
      "text": "and three to black after that and then"
    },
    {
      "start": "22:55",
      "end": "23:03",
      "text": "and three to black after that and then five to black"
    },
    {
      "start": "23:04",
      "end": "23:04",
      "text": "the next node that is going to be"
    },
    {
      "start": "23:04",
      "end": "23:08",
      "text": "the next node that is going to be processed is going to be six six is one"
    },
    {
      "start": "23:08",
      "end": "23:08",
      "text": "processed is going to be six six is one"
    },
    {
      "start": "23:08",
      "end": "23:10",
      "text": "processed is going to be six six is one neighbor namely seven so we will add"
    },
    {
      "start": "23:10",
      "end": "23:10",
      "text": "neighbor namely seven so we will add"
    },
    {
      "start": "23:10",
      "end": "23:13",
      "text": "neighbor namely seven so we will add seven into the mix into the queue and"
    },
    {
      "start": "23:13",
      "end": "23:13",
      "text": "seven into the mix into the queue and"
    },
    {
      "start": "23:13",
      "end": "23:19",
      "text": "seven into the mix into the queue and its colors changed and the parent is"
    },
    {
      "start": "23:19",
      "end": "23:19",
      "text": "its colors changed and the parent is"
    },
    {
      "start": "23:19",
      "end": "23:24",
      "text": "its colors changed and the parent is also set six the other neighbors of six"
    },
    {
      "start": "23:24",
      "end": "23:24",
      "text": "also set six the other neighbors of six"
    },
    {
      "start": "23:24",
      "end": "23:27",
      "text": "also set six the other neighbors of six are five and two which surely cannot be"
    },
    {
      "start": "23:27",
      "end": "23:27",
      "text": "are five and two which surely cannot be"
    },
    {
      "start": "23:27",
      "end": "23:34",
      "text": "are five and two which surely cannot be added and after seven has been added we"
    },
    {
      "start": "23:34",
      "end": "23:34",
      "text": "added and after seven has been added we"
    },
    {
      "start": "23:34",
      "end": "23:37",
      "text": "added and after seven has been added we can say that the processing of six is"
    },
    {
      "start": "23:37",
      "end": "23:37",
      "text": "can say that the processing of six is"
    },
    {
      "start": "23:37",
      "end": "23:47",
      "text": "can say that the processing of six is over and its color becomes black the"
    },
    {
      "start": "23:47",
      "end": "23:47",
      "text": "over and its color becomes black the"
    },
    {
      "start": "23:47",
      "end": "23:50",
      "text": "over and its color becomes black the next node that will be processed is four"
    },
    {
      "start": "23:50",
      "end": "23:50",
      "text": "next node that will be processed is four"
    },
    {
      "start": "23:50",
      "end": "23:56",
      "text": "next node that will be processed is four four has two neighbors three and seven"
    },
    {
      "start": "23:56",
      "end": "23:56",
      "text": "four has two neighbors three and seven"
    },
    {
      "start": "23:56",
      "end": "23:59",
      "text": "four has two neighbors three and seven but both of them have colors different"
    },
    {
      "start": "23:59",
      "end": "23:59",
      "text": "but both of them have colors different"
    },
    {
      "start": "23:59",
      "end": "24:04",
      "text": "but both of them have colors different from white and therefore there's nothing"
    },
    {
      "start": "24:04",
      "end": "24:04",
      "text": "from white and therefore there's nothing"
    },
    {
      "start": "24:04",
      "end": "24:05",
      "text": "from white and therefore there's nothing to be done with any of the neighbors of"
    },
    {
      "start": "24:05",
      "end": "24:05",
      "text": "to be done with any of the neighbors of"
    },
    {
      "start": "24:05",
      "end": "24:11",
      "text": "to be done with any of the neighbors of 4/4 color will be changed to black and"
    },
    {
      "start": "24:11",
      "end": "24:11",
      "text": "4/4 color will be changed to black and"
    },
    {
      "start": "24:11",
      "end": "24:14",
      "text": "4/4 color will be changed to black and then the queue contains only seven that"
    },
    {
      "start": "24:14",
      "end": "24:14",
      "text": "then the queue contains only seven that"
    },
    {
      "start": "24:14",
      "end": "24:16",
      "text": "then the queue contains only seven that is removed all the neighbors of seven"
    },
    {
      "start": "24:16",
      "end": "24:16",
      "text": "is removed all the neighbors of seven"
    },
    {
      "start": "24:16",
      "end": "24:18",
      "text": "is removed all the neighbors of seven namely six and four has already been"
    },
    {
      "start": "24:18",
      "end": "24:18",
      "text": "namely six and four has already been"
    },
    {
      "start": "24:18",
      "end": "24:20",
      "text": "namely six and four has already been processed they're black in color and"
    },
    {
      "start": "24:20",
      "end": "24:21",
      "text": "processed they're black in color and"
    },
    {
      "start": "24:21",
      "end": "24:22",
      "text": "processed they're black in color and therefore nothing has to be done with"
    },
    {
      "start": "24:22",
      "end": "24:22",
      "text": "therefore nothing has to be done with"
    },
    {
      "start": "24:22",
      "end": "24:24",
      "text": "therefore nothing has to be done with seven other than change its color to"
    },
    {
      "start": "24:24",
      "end": "24:24",
      "text": "seven other than change its color to"
    },
    {
      "start": "24:24",
      "end": "24:28",
      "text": "seven other than change its color to black okay and at this stage the cues"
    },
    {
      "start": "24:28",
      "end": "24:28",
      "text": "black okay and at this stage the cues"
    },
    {
      "start": "24:28",
      "end": "24:32",
      "text": "black okay and at this stage the cues again empty so that processing is over"
    },
    {
      "start": "24:32",
      "end": "24:32",
      "text": "again empty so that processing is over"
    },
    {
      "start": "24:32",
      "end": "24:35",
      "text": "again empty so that processing is over and we would have traversed all the"
    },
    {
      "start": "24:35",
      "end": "24:35",
      "text": "and we would have traversed all the"
    },
    {
      "start": "24:35",
      "end": "24:38",
      "text": "and we would have traversed all the nodes by that okay note that if you look"
    },
    {
      "start": "24:38",
      "end": "24:38",
      "text": "nodes by that okay note that if you look"
    },
    {
      "start": "24:38",
      "end": "24:41",
      "text": "nodes by that okay note that if you look at just the predecessors of each node"
    },
    {
      "start": "24:41",
      "end": "24:41",
      "text": "at just the predecessors of each node"
    },
    {
      "start": "24:41",
      "end": "24:48",
      "text": "at just the predecessors of each node that will be an interesting diagram this"
    },
    {
      "start": "24:48",
      "end": "24:48",
      "text": "that will be an interesting diagram this"
    },
    {
      "start": "24:48",
      "end": "24:53",
      "text": "that will be an interesting diagram this will be a tree with no cycles it's a"
    },
    {
      "start": "24:53",
      "end": "24:53",
      "text": "will be a tree with no cycles it's a"
    },
    {
      "start": "24:53",
      "end": "24:58",
      "text": "will be a tree with no cycles it's a directed tree with every node having a"
    },
    {
      "start": "24:58",
      "end": "24:58",
      "text": "directed tree with every node having a"
    },
    {
      "start": "24:58",
      "end": "25:03",
      "text": "directed tree with every node having a unique path to the vertex one and so"
    },
    {
      "start": "25:03",
      "end": "25:03",
      "text": "unique path to the vertex one and so"
    },
    {
      "start": "25:03",
      "end": "25:08",
      "text": "unique path to the vertex one and so that tree is called as the BFS tree and"
    },
    {
      "start": "25:08",
      "end": "25:08",
      "text": "that tree is called as the BFS tree and"
    },
    {
      "start": "25:08",
      "end": "25:10",
      "text": "that tree is called as the BFS tree and this entire algorithm can be implemented"
    },
    {
      "start": "25:10",
      "end": "25:10",
      "text": "this entire algorithm can be implemented"
    },
    {
      "start": "25:10",
      "end": "25:13",
      "text": "this entire algorithm can be implemented in linear time if you maintain the"
    },
    {
      "start": "25:13",
      "end": "25:13",
      "text": "in linear time if you maintain the"
    },
    {
      "start": "25:13",
      "end": "25:17",
      "text": "in linear time if you maintain the initial graph as an adjacency list"
    },
    {
      "start": "25:17",
      "end": "25:17",
      "text": "initial graph as an adjacency list"
    },
    {
      "start": "25:17",
      "end": "25:20",
      "text": "initial graph as an adjacency list the next search algorithm that we will"
    },
    {
      "start": "25:20",
      "end": "25:20",
      "text": "the next search algorithm that we will"
    },
    {
      "start": "25:20",
      "end": "25:25",
      "text": "the next search algorithm that we will see is the BFS search so let's begin the"
    },
    {
      "start": "25:25",
      "end": "25:25",
      "text": "see is the BFS search so let's begin the"
    },
    {
      "start": "25:25",
      "end": "25:31",
      "text": "see is the BFS search so let's begin the DFS search the depth-first search so"
    },
    {
      "start": "25:31",
      "end": "25:31",
      "text": "DFS search the depth-first search so"
    },
    {
      "start": "25:31",
      "end": "25:35",
      "text": "DFS search the depth-first search so again we will have two parameters"
    },
    {
      "start": "25:35",
      "end": "25:35",
      "text": "again we will have two parameters"
    },
    {
      "start": "25:35",
      "end": "25:40",
      "text": "again we will have two parameters associated with each node namely its"
    },
    {
      "start": "25:40",
      "end": "25:40",
      "text": "associated with each node namely its"
    },
    {
      "start": "25:40",
      "end": "25:47",
      "text": "associated with each node namely its color and the parent instead of using a"
    },
    {
      "start": "25:47",
      "end": "25:47",
      "text": "color and the parent instead of using a"
    },
    {
      "start": "25:47",
      "end": "25:50",
      "text": "color and the parent instead of using a Q we could implement DFS algorithm using"
    },
    {
      "start": "25:50",
      "end": "25:50",
      "text": "Q we could implement DFS algorithm using"
    },
    {
      "start": "25:50",
      "end": "25:55",
      "text": "Q we could implement DFS algorithm using a stack we will see a recursive version"
    },
    {
      "start": "25:55",
      "end": "25:55",
      "text": "a stack we will see a recursive version"
    },
    {
      "start": "25:55",
      "end": "25:57",
      "text": "a stack we will see a recursive version of the DFS algorithm where and we will"
    },
    {
      "start": "25:57",
      "end": "25:57",
      "text": "of the DFS algorithm where and we will"
    },
    {
      "start": "25:57",
      "end": "25:59",
      "text": "of the DFS algorithm where and we will not have to explicitly maintain the"
    },
    {
      "start": "25:59",
      "end": "25:59",
      "text": "not have to explicitly maintain the"
    },
    {
      "start": "25:59",
      "end": "26:01",
      "text": "not have to explicitly maintain the stack that a recursion would essentially"
    },
    {
      "start": "26:01",
      "end": "26:01",
      "text": "stack that a recursion would essentially"
    },
    {
      "start": "26:01",
      "end": "26:05",
      "text": "stack that a recursion would essentially keep track of this stack so DFS"
    },
    {
      "start": "26:05",
      "end": "26:05",
      "text": "keep track of this stack so DFS"
    },
    {
      "start": "26:05",
      "end": "26:09",
      "text": "keep track of this stack so DFS algorithm this will require two inputs"
    },
    {
      "start": "26:09",
      "end": "26:09",
      "text": "algorithm this will require two inputs"
    },
    {
      "start": "26:09",
      "end": "26:11",
      "text": "algorithm this will require two inputs two parameters one is the graph itself"
    },
    {
      "start": "26:11",
      "end": "26:11",
      "text": "two parameters one is the graph itself"
    },
    {
      "start": "26:11",
      "end": "26:14",
      "text": "two parameters one is the graph itself and the other is the starting vertex we"
    },
    {
      "start": "26:14",
      "end": "26:14",
      "text": "and the other is the starting vertex we"
    },
    {
      "start": "26:14",
      "end": "26:23",
      "text": "and the other is the starting vertex we will have an initialization phase"
    },
    {
      "start": "26:28",
      "end": "26:28",
      "text": "we're in the color of each vertex so u"
    },
    {
      "start": "26:28",
      "end": "26:41",
      "text": "we're in the color of each vertex so u dot color is equal to white and u dot"
    },
    {
      "start": "26:41",
      "end": "26:41",
      "text": "dot color is equal to white and u dot"
    },
    {
      "start": "26:41",
      "end": "26:46",
      "text": "dot color is equal to white and u dot parent is equal to nil so before you"
    },
    {
      "start": "26:46",
      "end": "26:46",
      "text": "parent is equal to nil so before you"
    },
    {
      "start": "26:46",
      "end": "26:47",
      "text": "parent is equal to nil so before you start the DFS algorithm on any"
    },
    {
      "start": "26:47",
      "end": "26:47",
      "text": "start the DFS algorithm on any"
    },
    {
      "start": "26:47",
      "end": "26:51",
      "text": "start the DFS algorithm on any particular graph we need to do this"
    },
    {
      "start": "26:51",
      "end": "26:51",
      "text": "particular graph we need to do this"
    },
    {
      "start": "26:51",
      "end": "26:54",
      "text": "particular graph we need to do this initialization ok and once this is"
    },
    {
      "start": "26:54",
      "end": "26:54",
      "text": "initialization ok and once this is"
    },
    {
      "start": "26:54",
      "end": "26:57",
      "text": "initialization ok and once this is initialized we can call our DFS routine"
    },
    {
      "start": "26:57",
      "end": "26:57",
      "text": "initialized we can call our DFS routine"
    },
    {
      "start": "26:57",
      "end": "27:01",
      "text": "initialized we can call our DFS routine so write down the DFS routine two"
    },
    {
      "start": "27:01",
      "end": "27:01",
      "text": "so write down the DFS routine two"
    },
    {
      "start": "27:01",
      "end": "27:03",
      "text": "so write down the DFS routine two parameters G and s we will assume that"
    },
    {
      "start": "27:03",
      "end": "27:03",
      "text": "parameters G and s we will assume that"
    },
    {
      "start": "27:03",
      "end": "27:06",
      "text": "parameters G and s we will assume that the initialization has already been done"
    },
    {
      "start": "27:06",
      "end": "27:06",
      "text": "the initialization has already been done"
    },
    {
      "start": "27:06",
      "end": "27:10",
      "text": "the initialization has already been done and what we will do is the following so"
    },
    {
      "start": "27:10",
      "end": "27:10",
      "text": "and what we will do is the following so"
    },
    {
      "start": "27:10",
      "end": "27:14",
      "text": "and what we will do is the following so we will make the color of s to be gray"
    },
    {
      "start": "27:14",
      "end": "27:14",
      "text": "we will make the color of s to be gray"
    },
    {
      "start": "27:14",
      "end": "27:21",
      "text": "we will make the color of s to be gray so s dot color is equal to gray and then"
    },
    {
      "start": "27:21",
      "end": "27:21",
      "text": "so s dot color is equal to gray and then"
    },
    {
      "start": "27:21",
      "end": "27:32",
      "text": "so s dot color is equal to gray and then for every neighbor of s reach"
    },
    {
      "start": "27:38",
      "end": "27:38",
      "text": "we will do the following if VDOT color"
    },
    {
      "start": "27:38",
      "end": "27:45",
      "text": "we will do the following if VDOT color is equal to white so while the DFS is"
    },
    {
      "start": "27:45",
      "end": "27:45",
      "text": "is equal to white so while the DFS is"
    },
    {
      "start": "27:45",
      "end": "27:48",
      "text": "is equal to white so while the DFS is being run each vertex its color could"
    },
    {
      "start": "27:48",
      "end": "27:48",
      "text": "being run each vertex its color could"
    },
    {
      "start": "27:48",
      "end": "27:51",
      "text": "being run each vertex its color could change we want to ensure that the colors"
    },
    {
      "start": "27:51",
      "end": "27:51",
      "text": "change we want to ensure that the colors"
    },
    {
      "start": "27:51",
      "end": "27:55",
      "text": "change we want to ensure that the colors change from white to gray to black so if"
    },
    {
      "start": "27:55",
      "end": "27:55",
      "text": "change from white to gray to black so if"
    },
    {
      "start": "27:55",
      "end": "27:57",
      "text": "change from white to gray to black so if you have a white colored vertex that"
    },
    {
      "start": "27:57",
      "end": "27:57",
      "text": "you have a white colored vertex that"
    },
    {
      "start": "27:57",
      "end": "28:00",
      "text": "you have a white colored vertex that means it is not being explored yet and"
    },
    {
      "start": "28:00",
      "end": "28:00",
      "text": "means it is not being explored yet and"
    },
    {
      "start": "28:00",
      "end": "28:02",
      "text": "means it is not being explored yet and therefore we are ready to explore it now"
    },
    {
      "start": "28:02",
      "end": "28:02",
      "text": "therefore we are ready to explore it now"
    },
    {
      "start": "28:02",
      "end": "28:05",
      "text": "therefore we are ready to explore it now because it's a neighbor of vertex s and"
    },
    {
      "start": "28:05",
      "end": "28:05",
      "text": "because it's a neighbor of vertex s and"
    },
    {
      "start": "28:05",
      "end": "28:11",
      "text": "because it's a neighbor of vertex s and what we will do is we'll just call DFS"
    },
    {
      "start": "28:11",
      "end": "28:11",
      "text": "what we will do is we'll just call DFS"
    },
    {
      "start": "28:11",
      "end": "28:17",
      "text": "what we will do is we'll just call DFS with this new vertex on the same graph"
    },
    {
      "start": "28:17",
      "end": "28:17",
      "text": "with this new vertex on the same graph"
    },
    {
      "start": "28:17",
      "end": "28:23",
      "text": "with this new vertex on the same graph so DFS G V and after all the vertices of"
    },
    {
      "start": "28:23",
      "end": "28:23",
      "text": "so DFS G V and after all the vertices of"
    },
    {
      "start": "28:23",
      "end": "28:26",
      "text": "so DFS G V and after all the vertices of s has been processed we can set the"
    },
    {
      "start": "28:26",
      "end": "28:26",
      "text": "s has been processed we can set the"
    },
    {
      "start": "28:26",
      "end": "28:31",
      "text": "s has been processed we can set the color of s to black s dot color is equal"
    },
    {
      "start": "28:31",
      "end": "28:31",
      "text": "color of s to black s dot color is equal"
    },
    {
      "start": "28:31",
      "end": "28:37",
      "text": "color of s to black s dot color is equal to black maybe's at this point just"
    },
    {
      "start": "28:37",
      "end": "28:37",
      "text": "to black maybe's at this point just"
    },
    {
      "start": "28:37",
      "end": "28:40",
      "text": "to black maybe's at this point just before calling the FS we will need to"
    },
    {
      "start": "28:40",
      "end": "28:40",
      "text": "before calling the FS we will need to"
    },
    {
      "start": "28:40",
      "end": "28:45",
      "text": "before calling the FS we will need to set the parent v dot pi is equal to s"
    },
    {
      "start": "28:45",
      "end": "28:45",
      "text": "set the parent v dot pi is equal to s"
    },
    {
      "start": "28:45",
      "end": "29:14",
      "text": "set the parent v dot pi is equal to s okay so let us see how this works"
    },
    {
      "start": "29:16",
      "end": "29:16",
      "text": "okay so suppose we have this particular"
    },
    {
      "start": "29:16",
      "end": "29:21",
      "text": "okay so suppose we have this particular graph and we start DFS at one okay so"
    },
    {
      "start": "29:21",
      "end": "29:21",
      "text": "graph and we start DFS at one okay so"
    },
    {
      "start": "29:21",
      "end": "29:25",
      "text": "graph and we start DFS at one okay so initially every vertex is of color of"
    },
    {
      "start": "29:25",
      "end": "29:25",
      "text": "initially every vertex is of color of"
    },
    {
      "start": "29:25",
      "end": "29:27",
      "text": "initially every vertex is of color of white and the parents that there are no"
    },
    {
      "start": "29:27",
      "end": "29:27",
      "text": "white and the parents that there are no"
    },
    {
      "start": "29:27",
      "end": "29:30",
      "text": "white and the parents that there are no parents everything is nil okay and when"
    },
    {
      "start": "29:30",
      "end": "29:30",
      "text": "parents everything is nil okay and when"
    },
    {
      "start": "29:30",
      "end": "29:34",
      "text": "parents everything is nil okay and when you call DFS on vertex one what happens"
    },
    {
      "start": "29:34",
      "end": "29:34",
      "text": "you call DFS on vertex one what happens"
    },
    {
      "start": "29:34",
      "end": "29:36",
      "text": "you call DFS on vertex one what happens is the color of that vertex immediately"
    },
    {
      "start": "29:36",
      "end": "29:36",
      "text": "is the color of that vertex immediately"
    },
    {
      "start": "29:36",
      "end": "29:40",
      "text": "is the color of that vertex immediately changes to gray and then what happens is"
    },
    {
      "start": "29:40",
      "end": "29:40",
      "text": "changes to gray and then what happens is"
    },
    {
      "start": "29:40",
      "end": "29:44",
      "text": "changes to gray and then what happens is the recursive calls start so for every"
    },
    {
      "start": "29:44",
      "end": "29:44",
      "text": "the recursive calls start so for every"
    },
    {
      "start": "29:44",
      "end": "29:46",
      "text": "the recursive calls start so for every neighbor the vertex one has two"
    },
    {
      "start": "29:46",
      "end": "29:46",
      "text": "neighbor the vertex one has two"
    },
    {
      "start": "29:46",
      "end": "29:48",
      "text": "neighbor the vertex one has two neighbors namely two and three for each"
    },
    {
      "start": "29:48",
      "end": "29:48",
      "text": "neighbors namely two and three for each"
    },
    {
      "start": "29:48",
      "end": "29:51",
      "text": "neighbors namely two and three for each of them we are going to call the DFS let"
    },
    {
      "start": "29:51",
      "end": "29:51",
      "text": "of them we are going to call the DFS let"
    },
    {
      "start": "29:51",
      "end": "29:53",
      "text": "of them we are going to call the DFS let us assume that the first DFS call will"
    },
    {
      "start": "29:53",
      "end": "29:53",
      "text": "us assume that the first DFS call will"
    },
    {
      "start": "29:53",
      "end": "29:55",
      "text": "us assume that the first DFS call will be 4 2 and the next day of us call will"
    },
    {
      "start": "29:55",
      "end": "29:55",
      "text": "be 4 2 and the next day of us call will"
    },
    {
      "start": "29:55",
      "end": "29:58",
      "text": "be 4 2 and the next day of us call will be 4 3 but before that we need to check"
    },
    {
      "start": "29:58",
      "end": "29:58",
      "text": "be 4 3 but before that we need to check"
    },
    {
      "start": "29:58",
      "end": "29:59",
      "text": "be 4 3 but before that we need to check whether those are white indeed they are"
    },
    {
      "start": "29:59",
      "end": "29:59",
      "text": "whether those are white indeed they are"
    },
    {
      "start": "29:59",
      "end": "30:01",
      "text": "whether those are white indeed they are white and therefore we can make those"
    },
    {
      "start": "30:01",
      "end": "30:01",
      "text": "white and therefore we can make those"
    },
    {
      "start": "30:01",
      "end": "30:02",
      "text": "white and therefore we can make those calls okay"
    },
    {
      "start": "30:02",
      "end": "30:02",
      "text": "calls okay"
    },
    {
      "start": "30:02",
      "end": "30:05",
      "text": "calls okay the very first call that will be for us"
    },
    {
      "start": "30:05",
      "end": "30:05",
      "text": "the very first call that will be for us"
    },
    {
      "start": "30:05",
      "end": "30:10",
      "text": "the very first call that will be for us DFS 2 when DFS 2 is being called what"
    },
    {
      "start": "30:10",
      "end": "30:10",
      "text": "DFS 2 when DFS 2 is being called what"
    },
    {
      "start": "30:10",
      "end": "30:15",
      "text": "DFS 2 when DFS 2 is being called what happens is it will go into the recursive"
    },
    {
      "start": "30:15",
      "end": "30:15",
      "text": "happens is it will go into the recursive"
    },
    {
      "start": "30:15",
      "end": "30:22",
      "text": "happens is it will go into the recursive call the recursive routine and inside"
    },
    {
      "start": "30:22",
      "end": "30:22",
      "text": "call the recursive routine and inside"
    },
    {
      "start": "30:22",
      "end": "30:25",
      "text": "call the recursive routine and inside that the color of this would be made"
    },
    {
      "start": "30:25",
      "end": "30:25",
      "text": "that the color of this would be made"
    },
    {
      "start": "30:25",
      "end": "30:33",
      "text": "that the color of this would be made great and we would have set the parent"
    },
    {
      "start": "30:33",
      "end": "30:33",
      "text": "great and we would have set the parent"
    },
    {
      "start": "30:33",
      "end": "30:37",
      "text": "great and we would have set the parent ok the parent of 2 is going to be 1 and"
    },
    {
      "start": "30:37",
      "end": "30:37",
      "text": "ok the parent of 2 is going to be 1 and"
    },
    {
      "start": "30:37",
      "end": "30:41",
      "text": "ok the parent of 2 is going to be 1 and now we are going to process DFS G with 2"
    },
    {
      "start": "30:41",
      "end": "30:41",
      "text": "now we are going to process DFS G with 2"
    },
    {
      "start": "30:41",
      "end": "30:46",
      "text": "now we are going to process DFS G with 2 when we are running the DFS on to its"
    },
    {
      "start": "30:46",
      "end": "30:46",
      "text": "when we are running the DFS on to its"
    },
    {
      "start": "30:46",
      "end": "30:47",
      "text": "when we are running the DFS on to its color would have been set to gray and"
    },
    {
      "start": "30:47",
      "end": "30:47",
      "text": "color would have been set to gray and"
    },
    {
      "start": "30:47",
      "end": "30:51",
      "text": "color would have been set to gray and then for each neighbor of 2 we will have"
    },
    {
      "start": "30:51",
      "end": "30:51",
      "text": "then for each neighbor of 2 we will have"
    },
    {
      "start": "30:51",
      "end": "30:55",
      "text": "then for each neighbor of 2 we will have to process this particular code and we"
    },
    {
      "start": "30:55",
      "end": "30:55",
      "text": "to process this particular code and we"
    },
    {
      "start": "30:55",
      "end": "30:58",
      "text": "to process this particular code and we will have to process this code segment"
    },
    {
      "start": "30:58",
      "end": "30:58",
      "text": "will have to process this code segment"
    },
    {
      "start": "30:58",
      "end": "31:03",
      "text": "will have to process this code segment for every neighbor of to 2 has three"
    },
    {
      "start": "31:03",
      "end": "31:03",
      "text": "for every neighbor of to 2 has three"
    },
    {
      "start": "31:03",
      "end": "31:07",
      "text": "for every neighbor of to 2 has three neighbors namely 1 4 and 6 but out of"
    },
    {
      "start": "31:07",
      "end": "31:07",
      "text": "neighbors namely 1 4 and 6 but out of"
    },
    {
      "start": "31:07",
      "end": "31:11",
      "text": "neighbors namely 1 4 and 6 but out of them only 4 &amp; 6 are white and therefore"
    },
    {
      "start": "31:11",
      "end": "31:11",
      "text": "them only 4 &amp; 6 are white and therefore"
    },
    {
      "start": "31:11",
      "end": "31:14",
      "text": "them only 4 &amp; 6 are white and therefore those alone will be processed okay so"
    },
    {
      "start": "31:14",
      "end": "31:14",
      "text": "those alone will be processed okay so"
    },
    {
      "start": "31:14",
      "end": "31:16",
      "text": "those alone will be processed okay so let us say vertex 4 is going to be"
    },
    {
      "start": "31:16",
      "end": "31:16",
      "text": "let us say vertex 4 is going to be"
    },
    {
      "start": "31:16",
      "end": "31:18",
      "text": "let us say vertex 4 is going to be processed first so its parent is going"
    },
    {
      "start": "31:18",
      "end": "31:18",
      "text": "processed first so its parent is going"
    },
    {
      "start": "31:18",
      "end": "31:26",
      "text": "processed first so its parent is going to be set to 2 and while DFS g4 is being"
    },
    {
      "start": "31:26",
      "end": "31:26",
      "text": "to be set to 2 and while DFS g4 is being"
    },
    {
      "start": "31:26",
      "end": "31:27",
      "text": "to be set to 2 and while DFS g4 is being processed this"
    },
    {
      "start": "31:27",
      "end": "31:27",
      "text": "processed this"
    },
    {
      "start": "31:27",
      "end": "31:30",
      "text": "processed this we'll turn into a gray node once this is"
    },
    {
      "start": "31:30",
      "end": "31:30",
      "text": "we'll turn into a gray node once this is"
    },
    {
      "start": "31:30",
      "end": "31:32",
      "text": "we'll turn into a gray node once this is a gray node we will have to explore all"
    },
    {
      "start": "31:32",
      "end": "31:32",
      "text": "a gray node we will have to explore all"
    },
    {
      "start": "31:32",
      "end": "31:36",
      "text": "a gray node we will have to explore all its neighbors it has four neighbors two"
    },
    {
      "start": "31:36",
      "end": "31:36",
      "text": "its neighbors it has four neighbors two"
    },
    {
      "start": "31:36",
      "end": "31:41",
      "text": "its neighbors it has four neighbors two three six and seven the white neighbors"
    },
    {
      "start": "31:41",
      "end": "31:41",
      "text": "three six and seven the white neighbors"
    },
    {
      "start": "31:41",
      "end": "31:44",
      "text": "three six and seven the white neighbors are three of them three six and seven so"
    },
    {
      "start": "31:44",
      "end": "31:44",
      "text": "are three of them three six and seven so"
    },
    {
      "start": "31:44",
      "end": "31:46",
      "text": "are three of them three six and seven so assumably all of them will essentially"
    },
    {
      "start": "31:46",
      "end": "31:46",
      "text": "assumably all of them will essentially"
    },
    {
      "start": "31:46",
      "end": "31:51",
      "text": "assumably all of them will essentially be processed and just say DFS for when"
    },
    {
      "start": "31:51",
      "end": "31:51",
      "text": "be processed and just say DFS for when"
    },
    {
      "start": "31:51",
      "end": "31:52",
      "text": "be processed and just say DFS for when it is being called the neighbor that is"
    },
    {
      "start": "31:52",
      "end": "31:52",
      "text": "it is being called the neighbor that is"
    },
    {
      "start": "31:52",
      "end": "31:55",
      "text": "it is being called the neighbor that is big is that this picked first is vertex"
    },
    {
      "start": "31:55",
      "end": "31:55",
      "text": "big is that this picked first is vertex"
    },
    {
      "start": "31:55",
      "end": "32:02",
      "text": "big is that this picked first is vertex number seven okay and therefore the"
    },
    {
      "start": "32:02",
      "end": "32:02",
      "text": "number seven okay and therefore the"
    },
    {
      "start": "32:02",
      "end": "32:06",
      "text": "number seven okay and therefore the parent would be set and seven would turn"
    },
    {
      "start": "32:06",
      "end": "32:06",
      "text": "parent would be set and seven would turn"
    },
    {
      "start": "32:06",
      "end": "32:09",
      "text": "parent would be set and seven would turn gray and DFS seven is going to be"
    },
    {
      "start": "32:09",
      "end": "32:09",
      "text": "gray and DFS seven is going to be"
    },
    {
      "start": "32:09",
      "end": "32:10",
      "text": "gray and DFS seven is going to be processed"
    },
    {
      "start": "32:10",
      "end": "32:10",
      "text": "processed"
    },
    {
      "start": "32:10",
      "end": "32:13",
      "text": "processed DFS seven is processed seven has two"
    },
    {
      "start": "32:13",
      "end": "32:13",
      "text": "DFS seven is processed seven has two"
    },
    {
      "start": "32:13",
      "end": "32:17",
      "text": "DFS seven is processed seven has two neighbors namely four and five the only"
    },
    {
      "start": "32:17",
      "end": "32:17",
      "text": "neighbors namely four and five the only"
    },
    {
      "start": "32:17",
      "end": "32:20",
      "text": "neighbors namely four and five the only white neighbor is going to be five so"
    },
    {
      "start": "32:20",
      "end": "32:20",
      "text": "white neighbor is going to be five so"
    },
    {
      "start": "32:20",
      "end": "32:25",
      "text": "white neighbor is going to be five so that is going to be a DFS five when DF"
    },
    {
      "start": "32:25",
      "end": "32:25",
      "text": "that is going to be a DFS five when DF"
    },
    {
      "start": "32:25",
      "end": "32:27",
      "text": "that is going to be a DFS five when DF and the parent is going to be set and"
    },
    {
      "start": "32:27",
      "end": "32:27",
      "text": "and the parent is going to be set and"
    },
    {
      "start": "32:27",
      "end": "32:30",
      "text": "and the parent is going to be set and DFS five will look at all its neighbors"
    },
    {
      "start": "32:30",
      "end": "32:30",
      "text": "DFS five will look at all its neighbors"
    },
    {
      "start": "32:30",
      "end": "32:34",
      "text": "DFS five will look at all its neighbors its neighbors are three and seven and"
    },
    {
      "start": "32:34",
      "end": "32:34",
      "text": "its neighbors are three and seven and"
    },
    {
      "start": "32:34",
      "end": "32:37",
      "text": "its neighbors are three and seven and three is still white in color so that"
    },
    {
      "start": "32:37",
      "end": "32:37",
      "text": "three is still white in color so that"
    },
    {
      "start": "32:37",
      "end": "32:42",
      "text": "three is still white in color so that would be processed and that turns gray"
    },
    {
      "start": "32:42",
      "end": "32:42",
      "text": "would be processed and that turns gray"
    },
    {
      "start": "32:42",
      "end": "32:45",
      "text": "would be processed and that turns gray and when you are processing three the"
    },
    {
      "start": "32:45",
      "end": "32:45",
      "text": "and when you are processing three the"
    },
    {
      "start": "32:45",
      "end": "32:48",
      "text": "and when you are processing three the only neighbor of three that is still in"
    },
    {
      "start": "32:48",
      "end": "32:48",
      "text": "only neighbor of three that is still in"
    },
    {
      "start": "32:48",
      "end": "32:51",
      "text": "only neighbor of three that is still in contention is six so it will directly go"
    },
    {
      "start": "32:51",
      "end": "32:51",
      "text": "contention is six so it will directly go"
    },
    {
      "start": "32:51",
      "end": "32:59",
      "text": "contention is six so it will directly go to six let us look at the situation now"
    },
    {
      "start": "32:59",
      "end": "32:59",
      "text": "to six let us look at the situation now"
    },
    {
      "start": "32:59",
      "end": "33:02",
      "text": "to six let us look at the situation now when six would have turned to gray and"
    },
    {
      "start": "33:02",
      "end": "33:02",
      "text": "when six would have turned to gray and"
    },
    {
      "start": "33:02",
      "end": "33:07",
      "text": "when six would have turned to gray and all the neighbors of six are of color"
    },
    {
      "start": "33:07",
      "end": "33:07",
      "text": "all the neighbors of six are of color"
    },
    {
      "start": "33:07",
      "end": "33:09",
      "text": "all the neighbors of six are of color other than white so the call will return"
    },
    {
      "start": "33:09",
      "end": "33:09",
      "text": "other than white so the call will return"
    },
    {
      "start": "33:09",
      "end": "33:17",
      "text": "other than white so the call will return back to three okay let's just one more"
    },
    {
      "start": "33:17",
      "end": "33:17",
      "text": "back to three okay let's just one more"
    },
    {
      "start": "33:17",
      "end": "33:21",
      "text": "back to three okay let's just one more neighbor"
    },
    {
      "start": "33:24",
      "end": "33:24",
      "text": "if we had a neighbor eight which is"
    },
    {
      "start": "33:24",
      "end": "33:27",
      "text": "if we had a neighbor eight which is connected to both one and two okay"
    },
    {
      "start": "33:27",
      "end": "33:27",
      "text": "connected to both one and two okay"
    },
    {
      "start": "33:27",
      "end": "33:29",
      "text": "connected to both one and two okay the recursive calls would have happened"
    },
    {
      "start": "33:29",
      "end": "33:29",
      "text": "the recursive calls would have happened"
    },
    {
      "start": "33:29",
      "end": "33:34",
      "text": "the recursive calls would have happened in the same way if you look at six all"
    },
    {
      "start": "33:34",
      "end": "33:34",
      "text": "in the same way if you look at six all"
    },
    {
      "start": "33:34",
      "end": "33:37",
      "text": "in the same way if you look at six all its neighbors has been processed so"
    },
    {
      "start": "33:37",
      "end": "33:37",
      "text": "its neighbors has been processed so"
    },
    {
      "start": "33:37",
      "end": "33:41",
      "text": "its neighbors has been processed so you'll go to three and three also every"
    },
    {
      "start": "33:41",
      "end": "33:41",
      "text": "you'll go to three and three also every"
    },
    {
      "start": "33:41",
      "end": "33:42",
      "text": "you'll go to three and three also every neighbor has been processed"
    },
    {
      "start": "33:42",
      "end": "33:42",
      "text": "neighbor has been processed"
    },
    {
      "start": "33:42",
      "end": "33:44",
      "text": "neighbor has been processed there's no neighbor of three which is of"
    },
    {
      "start": "33:44",
      "end": "33:44",
      "text": "there's no neighbor of three which is of"
    },
    {
      "start": "33:44",
      "end": "33:48",
      "text": "there's no neighbor of three which is of color right and therefore it goes back"
    },
    {
      "start": "33:48",
      "end": "33:48",
      "text": "color right and therefore it goes back"
    },
    {
      "start": "33:48",
      "end": "33:50",
      "text": "color right and therefore it goes back to five and from five it goes back to"
    },
    {
      "start": "33:50",
      "end": "33:50",
      "text": "to five and from five it goes back to"
    },
    {
      "start": "33:50",
      "end": "33:52",
      "text": "to five and from five it goes back to seven from seven it goes back to four"
    },
    {
      "start": "33:52",
      "end": "33:52",
      "text": "seven from seven it goes back to four"
    },
    {
      "start": "33:52",
      "end": "33:54",
      "text": "seven from seven it goes back to four because all the neighbors of these nodes"
    },
    {
      "start": "33:54",
      "end": "33:54",
      "text": "because all the neighbors of these nodes"
    },
    {
      "start": "33:54",
      "end": "33:56",
      "text": "because all the neighbors of these nodes were already processed when you come"
    },
    {
      "start": "33:56",
      "end": "33:56",
      "text": "were already processed when you come"
    },
    {
      "start": "33:56",
      "end": "33:59",
      "text": "were already processed when you come back to two the two had lot of neighbors"
    },
    {
      "start": "33:59",
      "end": "33:59",
      "text": "back to two the two had lot of neighbors"
    },
    {
      "start": "33:59",
      "end": "34:03",
      "text": "back to two the two had lot of neighbors namely six four one and eight but the"
    },
    {
      "start": "34:03",
      "end": "34:03",
      "text": "namely six four one and eight but the"
    },
    {
      "start": "34:03",
      "end": "34:05",
      "text": "namely six four one and eight but the only neighbor which is still white in"
    },
    {
      "start": "34:05",
      "end": "34:05",
      "text": "only neighbor which is still white in"
    },
    {
      "start": "34:05",
      "end": "34:08",
      "text": "only neighbor which is still white in color as eight so that will be processed"
    },
    {
      "start": "34:08",
      "end": "34:08",
      "text": "color as eight so that will be processed"
    },
    {
      "start": "34:08",
      "end": "34:11",
      "text": "color as eight so that will be processed okay and the parent would essentially be"
    },
    {
      "start": "34:11",
      "end": "34:11",
      "text": "okay and the parent would essentially be"
    },
    {
      "start": "34:11",
      "end": "34:14",
      "text": "okay and the parent would essentially be pointing to two and this should become"
    },
    {
      "start": "34:14",
      "end": "34:14",
      "text": "pointing to two and this should become"
    },
    {
      "start": "34:14",
      "end": "34:22",
      "text": "pointing to two and this should become great and at this point all the calls"
    },
    {
      "start": "34:22",
      "end": "34:22",
      "text": "great and at this point all the calls"
    },
    {
      "start": "34:22",
      "end": "34:25",
      "text": "great and at this point all the calls have been serviced and it has no longer"
    },
    {
      "start": "34:25",
      "end": "34:25",
      "text": "have been serviced and it has no longer"
    },
    {
      "start": "34:25",
      "end": "34:27",
      "text": "have been serviced and it has no longer any other neighbor I mean it doesn't"
    },
    {
      "start": "34:27",
      "end": "34:27",
      "text": "any other neighbor I mean it doesn't"
    },
    {
      "start": "34:27",
      "end": "34:29",
      "text": "any other neighbor I mean it doesn't have any neighbor which is white in"
    },
    {
      "start": "34:29",
      "end": "34:29",
      "text": "have any neighbor which is white in"
    },
    {
      "start": "34:29",
      "end": "34:30",
      "text": "have any neighbor which is white in color and therefore the entire process"
    },
    {
      "start": "34:30",
      "end": "34:30",
      "text": "color and therefore the entire process"
    },
    {
      "start": "34:30",
      "end": "34:32",
      "text": "color and therefore the entire process it means over should have checked that"
    },
    {
      "start": "34:32",
      "end": "34:32",
      "text": "it means over should have checked that"
    },
    {
      "start": "34:32",
      "end": "34:35",
      "text": "it means over should have checked that while we are returning these calls they"
    },
    {
      "start": "34:35",
      "end": "34:35",
      "text": "while we are returning these calls they"
    },
    {
      "start": "34:35",
      "end": "34:38",
      "text": "while we are returning these calls they know the color has changed from gray to"
    },
    {
      "start": "34:38",
      "end": "34:38",
      "text": "know the color has changed from gray to"
    },
    {
      "start": "34:38",
      "end": "34:44",
      "text": "know the color has changed from gray to black okay so the place where we would"
    },
    {
      "start": "34:44",
      "end": "34:44",
      "text": "black okay so the place where we would"
    },
    {
      "start": "34:44",
      "end": "34:46",
      "text": "black okay so the place where we would have ended up search initially would"
    },
    {
      "start": "34:46",
      "end": "34:46",
      "text": "have ended up search initially would"
    },
    {
      "start": "34:46",
      "end": "34:49",
      "text": "have ended up search initially would have been six so at node sick when we"
    },
    {
      "start": "34:49",
      "end": "34:49",
      "text": "have been six so at node sick when we"
    },
    {
      "start": "34:49",
      "end": "34:51",
      "text": "have been six so at node sick when we were at node six all its neighbors were"
    },
    {
      "start": "34:51",
      "end": "34:51",
      "text": "were at node six all its neighbors were"
    },
    {
      "start": "34:51",
      "end": "34:53",
      "text": "were at node six all its neighbors were processed and at that point this would"
    },
    {
      "start": "34:53",
      "end": "34:53",
      "text": "processed and at that point this would"
    },
    {
      "start": "34:53",
      "end": "34:56",
      "text": "processed and at that point this would have turned black okay six would have"
    },
    {
      "start": "34:56",
      "end": "34:56",
      "text": "have turned black okay six would have"
    },
    {
      "start": "34:56",
      "end": "34:58",
      "text": "have turned black okay six would have turned black and then we would have come"
    },
    {
      "start": "34:58",
      "end": "34:58",
      "text": "turned black and then we would have come"
    },
    {
      "start": "34:58",
      "end": "35:00",
      "text": "turned black and then we would have come back two three and all labors of three"
    },
    {
      "start": "35:00",
      "end": "35:00",
      "text": "back two three and all labors of three"
    },
    {
      "start": "35:00",
      "end": "35:02",
      "text": "back two three and all labors of three have been processed so this would have"
    },
    {
      "start": "35:02",
      "end": "35:02",
      "text": "have been processed so this would have"
    },
    {
      "start": "35:02",
      "end": "35:07",
      "text": "have been processed so this would have again been turned to black okay and then"
    },
    {
      "start": "35:07",
      "end": "35:07",
      "text": "again been turned to black okay and then"
    },
    {
      "start": "35:07",
      "end": "35:10",
      "text": "again been turned to black okay and then Wendy call returns to five this would"
    },
    {
      "start": "35:10",
      "end": "35:10",
      "text": "Wendy call returns to five this would"
    },
    {
      "start": "35:10",
      "end": "35:12",
      "text": "Wendy call returns to five this would have become black and then that call"
    },
    {
      "start": "35:12",
      "end": "35:12",
      "text": "have become black and then that call"
    },
    {
      "start": "35:12",
      "end": "35:14",
      "text": "have become black and then that call returns to seven and sevens call is also"
    },
    {
      "start": "35:14",
      "end": "35:14",
      "text": "returns to seven and sevens call is also"
    },
    {
      "start": "35:14",
      "end": "35:16",
      "text": "returns to seven and sevens call is also serviced this becomes relaxed this would"
    },
    {
      "start": "35:16",
      "end": "35:16",
      "text": "serviced this becomes relaxed this would"
    },
    {
      "start": "35:16",
      "end": "35:20",
      "text": "serviced this becomes relaxed this would have become black and the call returns"
    },
    {
      "start": "35:20",
      "end": "35:20",
      "text": "have become black and the call returns"
    },
    {
      "start": "35:20",
      "end": "35:23",
      "text": "have become black and the call returns back to two two has one more neighbor to"
    },
    {
      "start": "35:23",
      "end": "35:23",
      "text": "back to two two has one more neighbor to"
    },
    {
      "start": "35:23",
      "end": "35:25",
      "text": "back to two two has one more neighbor to be processed eight after its processing"
    },
    {
      "start": "35:25",
      "end": "35:25",
      "text": "be processed eight after its processing"
    },
    {
      "start": "35:25",
      "end": "35:28",
      "text": "be processed eight after its processing is done this becomes black and then two"
    },
    {
      "start": "35:28",
      "end": "35:28",
      "text": "is done this becomes black and then two"
    },
    {
      "start": "35:28",
      "end": "35:29",
      "text": "is done this becomes black and then two becomes black and then one"
    },
    {
      "start": "35:29",
      "end": "35:29",
      "text": "becomes black and then one"
    },
    {
      "start": "35:29",
      "end": "35:32",
      "text": "becomes black and then one becomes black okay and at this point we"
    },
    {
      "start": "35:32",
      "end": "35:33",
      "text": "becomes black okay and at this point we"
    },
    {
      "start": "35:33",
      "end": "35:38",
      "text": "becomes black okay and at this point we have the we have a tree which is"
    },
    {
      "start": "35:38",
      "end": "35:38",
      "text": "have the we have a tree which is"
    },
    {
      "start": "35:38",
      "end": "35:43",
      "text": "have the we have a tree which is obtained by looking at the predecessor"
    },
    {
      "start": "35:43",
      "end": "35:43",
      "text": "obtained by looking at the predecessor"
    },
    {
      "start": "35:43",
      "end": "35:46",
      "text": "obtained by looking at the predecessor nodes that's what we will call as the"
    },
    {
      "start": "35:46",
      "end": "35:46",
      "text": "nodes that's what we will call as the"
    },
    {
      "start": "35:46",
      "end": "35:53",
      "text": "nodes that's what we will call as the DFS tree this entire DFS operation which"
    },
    {
      "start": "35:53",
      "end": "35:53",
      "text": "DFS tree this entire DFS operation which"
    },
    {
      "start": "35:53",
      "end": "35:56",
      "text": "DFS tree this entire DFS operation which we did via means of recursive calls we"
    },
    {
      "start": "35:56",
      "end": "35:56",
      "text": "we did via means of recursive calls we"
    },
    {
      "start": "35:56",
      "end": "35:59",
      "text": "we did via means of recursive calls we can implement it by means of a stack so"
    },
    {
      "start": "35:59",
      "end": "35:59",
      "text": "can implement it by means of a stack so"
    },
    {
      "start": "35:59",
      "end": "36:00",
      "text": "can implement it by means of a stack so each recursive call instead of it being"
    },
    {
      "start": "36:00",
      "end": "36:00",
      "text": "each recursive call instead of it being"
    },
    {
      "start": "36:00",
      "end": "36:04",
      "text": "each recursive call instead of it being automatically serviced by means of stack"
    },
    {
      "start": "36:04",
      "end": "36:04",
      "text": "automatically serviced by means of stack"
    },
    {
      "start": "36:04",
      "end": "36:05",
      "text": "automatically serviced by means of stack we can explicitly construct our own"
    },
    {
      "start": "36:05",
      "end": "36:05",
      "text": "we can explicitly construct our own"
    },
    {
      "start": "36:05",
      "end": "36:08",
      "text": "we can explicitly construct our own stack and push the vertices into the"
    },
    {
      "start": "36:08",
      "end": "36:08",
      "text": "stack and push the vertices into the"
    },
    {
      "start": "36:08",
      "end": "36:10",
      "text": "stack and push the vertices into the stack and pop it out from the stack as"
    },
    {
      "start": "36:10",
      "end": "36:10",
      "text": "stack and pop it out from the stack as"
    },
    {
      "start": "36:10",
      "end": "36:13",
      "text": "stack and pop it out from the stack as and when those vertices are processed so"
    },
    {
      "start": "36:13",
      "end": "36:13",
      "text": "and when those vertices are processed so"
    },
    {
      "start": "36:13",
      "end": "36:14",
      "text": "and when those vertices are processed so in either case we can implement the"
    },
    {
      "start": "36:14",
      "end": "36:14",
      "text": "in either case we can implement the"
    },
    {
      "start": "36:14",
      "end": "36:17",
      "text": "in either case we can implement the algorithm in linear time assuming that"
    },
    {
      "start": "36:17",
      "end": "36:17",
      "text": "algorithm in linear time assuming that"
    },
    {
      "start": "36:17",
      "end": "36:21",
      "text": "algorithm in linear time assuming that the the graph was given in an adjacency"
    },
    {
      "start": "36:21",
      "end": "36:21",
      "text": "the the graph was given in an adjacency"
    },
    {
      "start": "36:21",
      "end": "36:25",
      "text": "the the graph was given in an adjacency list format so this is about DFS in DFS"
    },
    {
      "start": "36:25",
      "end": "36:25",
      "text": "list format so this is about DFS in DFS"
    },
    {
      "start": "36:25",
      "end": "36:28",
      "text": "list format so this is about DFS in DFS we will stop here for the time being so"
    },
    {
      "start": "36:28",
      "end": "36:28",
      "text": "we will stop here for the time being so"
    },
    {
      "start": "36:28",
      "end": "36:33",
      "text": "we will stop here for the time being so that's the end of this lecture"
    }
  ],
  "timestamped": true
}